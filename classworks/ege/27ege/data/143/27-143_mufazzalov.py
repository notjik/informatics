"""
143)	(PRO100 ЕГЭ) Дана последовательность из N натуральных чисел. Рассматриваются все её  непрерывные подпоследовательности длины K. Требуется найти максимальную сумму  чисел, кратную 68, в двух таких непересекающихся подпоследовательностях.
Входные данные: Даны два входных файла: файл A (27-143a.txt) и файл B (27-143b.txt), каждый из которых содержит в первой строке количество чисел N (1 ≤ N ≤ 10 000 000) и длину подпоследовательностей K (1 ≤ N ≤ 100 000). Каждая из следующих N строк содержит одно натуральное число, не превышающее 10 000.
Пример входного файла:
5 2
68
67
9
60
811
Первая подпоследовательность: 68 67,  вторая подпоследовательность – 9 60. Сумма: (68 + 67) + (9 + 60) = 204 делится на 68. Ответ: 204.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.

#"""
import time

t = time.time()
with open('27-143b.txt') as f:
    n, k = list(map(int, f.readline().split()))
    a = [int(f.readline()) for i in range(n)]
d, ans, m, c = 4, 0, {}, [sum(a[:k])]
for i in range(1, n-k+1):
    c.append(c[-1] + a[i + k - 1] - a[i - 1])
for i in range(k, n - k+1):
    z = c[i-k] % d
    m[z] = max(m.get(z, 0), c[i-k])
    if (e := (d - c[i] % d) % d) in m:
        ans = max(ans, c[i] + m[e])
print(ans)
print('time=', time.time() - t, 'c.')

# -------------------------------------------------
t = time.time()
with open('27-143b.txt') as f:
    n, k = list(map(int, f.readline().split()))
    a = [int(f.readline()) for i in range(n)]
d, ans, m, c = 4, 0, {}, [sum(a[:k])]
for i in range(1, k):
    c.append(c[-1] + a[i + k - 1] - a[i - 1])
for i in range(k, n - k+1):
    j = i % k
    z = c[j] % d
    m[z] = max(m.get(z, 0), c[j])
    c[j] = c[j - 1] + a[i + k - 1] - a[i - 1]
    if (e := (d - c[j] % d) % d) in m:
        ans = max(ans, c[j] + m[e])
print(ans)
print('time=', time.time() - t, 'c.')
