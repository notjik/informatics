# Автор: Л. Шастин

f = open('27-142a.txt')
n, k, m = map(int, f.readline().split())
a = [0]*k
for i in range(n):
    km, c = map(int, f.readline().split())
    a[km%k] = (c+20-1)//20

# накопление префиксных сумм с запасом, чтобы не выйти за пределы кольца
p = [0]*(4*k+1)
for i in range(1, 4*k+1):
    p[i] = p[i-1] + a[(i-1)%k]

# первая сумма для 0 = k километра
s = sum(a[i]*min(i, k-i) for i in range(k))
min_s = float('inf') # мин. сумма

# пересчёт следующих сумм
for i in range(k+1, 3*k):
    # следующая сумма увеличивается на суммарное количество писем
    # из тех точек, от которых мы отдалились (полусумма)
    # и уменьшается на количество писем из точек, к которым приблизились
    s = s + (p[i+k]-p[i+k//2]) - (p[i+k//2]-p[i])
    if p[i+m] - p[i-m+1] == 0: # если на подотрезке i-m...i+m все нули
        if s < min_s:
          min_s = s # обновление минимума
          pos = i % k
print( pos, min_s )













# переборный алгоритм
'''
f = open('27_A_7275.txt')
n, m = map(int, f.readline().split())
# аккуратное чтение данных
a = []
for i in range(n):
    km, k = map(int, f.readline().split())
    a.append((km, (k+30-1)//30))
max_count = 0 # максимальное количество контейнеров
for start in range(n):
    # перебирать позицию старта (открывать в a[start] лабораторию)
    count = 0 # количество контейнеров для доставки в эту лабораторию
    for j in range(n):
        # прохожусь по всем пунктам, откуда везу в лабораторию контейнеры
        r = abs(a[j][0]-a[start][0]) # расстояние от текущего пункта до лаборатории
        if r <= m: # если я могу отсюда довезти до лаборатории
            count += a[j][1] # добавляю количество контейнеров
    max_count = max(max_count, count) # обновляю максимум
print(max_count)
'''
