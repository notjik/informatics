from itertools import product


def to_base(n, b):
    a = [chr(i) for i in range(ord('0'), ord('9') + 1)] + [chr(i) for i in range(ord('a'), ord('z') + 1)]
    res = a[n % b]
    while n >= b:
        n //= b
        res += a[n % b]
    return res[::-1]

"""
57) Автомат получает на вход четырёхзначное число. По этому числу строится
новое число по следующим правилам.
1. Складываются первая и вторая, а также третья и четвёртая цифры исходного
числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 3165. Суммы: 3 + 1 = 4; 6 + 5 = 11. Результат: 114.
Укажите максимальное число, в результате обработки которого, автомат выдаст
число 1412.
"""
### TODO: Ответ — 9593
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , c + d], reverse=True)))
##    if num == 1412:
##        print('{}{}{}{}'.format(a, b, c, d))


"""
67) Автомат получает на вход трёхзначное число. По этому числу строится новое
число по следующим правилам.
1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 348. Суммы: 3 + 4 = 7; 4 + 8 = 12. Результат: 127.
Укажите наибольшее число, в результате обработки которого автомат выдаст
число 148.
"""
### TODO: Ответ — 953
##for a, b, c in product(range(10), repeat=3):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , b + c], reverse=True)))
##    if num == 148:
##        print('{}{}{}'.format(a, b, c))


"""
71) (Н. Леко) Автомат получает на вход два трехзначных числа.
По этим числам строится новое число по следующим правилам.
Вычисляются три числа – сумма старших разрядов заданных трехзначных чисел,
сумма средних разрядов этих чисел, сумма младших разрядов.
Полученные три числа записываются друг за другом в порядке невозрастания
(без разделителей).
Пример. Исходные трехзначные числа:  835, 196. Поразрядные суммы: 9, 12, 11.
Результат: 12119
Какое наименьшее значение может иметь одно из чисел, полученных на входе,
если другое число равно 694, а в результате работы автомата получено число
11108?
"""
### TODO: Ответ — 217
##for a1, b1, c1 in product(range(10), repeat=3):
##    if a1 == 0:
##        continue
##    num = int('{}{}{}'.format(*sorted([a1 + 6, b1 + 9, c1 + 4], reverse=True)))
##    if num == 11108:
##        print('{}{}{}'.format(a1, b1, c1))
##        break


"""
77) Автомат получает на вход четырехзначное число. По этому числу строится
новое число по следующим правилам. 
1. Складываются первая и вторая, а также третья и четвертая цифры исходного
числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 3165. Суммы: 3+1 = 4; 6+5 = 11. Результат: 114.
Укажите наибольшее число, в результате обработки которого, автомат
выдаст число 1311.
"""
### TODO: Ответ — 9492
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , c + d], reverse=True)))
##    if num == 1311:
##        print('{}{}{}{}'.format(a, b, c, d))


"""
85) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему
новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются справа ещё два разряда по следующему правилу:
а) в конец числа (справа) дописывается 1, если число единиц в двоичной записи
числа чётно, и 0, если число единиц в двоичной записи числа нечётно.
б) к этой записи справа дописывается 1, если остаток от деления количества
единиц на 2 равен 0, и 0, если остаток от деления количества единиц на 2
равен 1.
Полученная таким образом запись (в ней на два разряда больше, чем в записи
исходного числа N) является двоичной записью искомого числа R. Укажите
минимальное число R, которое превышает 54 и может являться результатом
работы алгоритма. В ответе это число запишите в десятичной системе.
"""
### TODO: Ответ — 56
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for _ in range(2):
##        r += '1' if not r.count('1') & 1 else '0'
##    r = int(r, 2)
##    if r > 54:
##        res.append(r)
##print(min(res))
    

"""
87) Автомат получает на вход трёхзначное число. По этому числу строится новое
число по следующим правилам.
1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 843. Суммы: 8 + 4 = 12; 4 + 3 = 7. Результат: 127.
Сколько существует чисел, в результате обработки которых автомат выдаст число
1715?
"""
### TODO: Ответ — 4
##res = 0
##for a, b, c in product(range(10), repeat=3):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , b + c], reverse=True)))
##    if num == 1715:
##        res += 1
##print(res)


"""
97) На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается справа бит чётности: 0,
если в двоичном коде числа N было чётное число единиц, и 1, если нечётное.
3) К полученному результату дописывается ещё один бит чётности.
Полученная таким образом запись (в ней на два разряда больше,
чем в записи исходного числа N) является двоичной записью искомого числа R.
Укажите минимальное число R, большее 180, которое может быть получено в
результате работы этого алгоритма. В ответе это число запишите в десятичной
системе.
"""
### TODO: Ответ — 184
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for _ in range(2):
##        r += str(r.count('1') & 1)
##    r = int(r, 2)
##    if r > 180:
##        res.append(r)
##print(min(res))
    
    
"""
107) Автомат получает на вход натуральное число X.
По этому числу строится трёхзначное число Y по следующим правилам.
1. Первая цифра числа Y (разряд сотен) – остаток от деления X на 4.
2. Вторая цифра числа Y (разряд десятков) – остаток от деления X на 2.
3. Третья цифра числа Y (разряд единиц) – остаток от деления X на 3.
Пример. Исходное число: 55. Остаток от деления на 4 равен 3;
остаток от деления на 2 равен 1; остаток от деления на 3 равен 1.
Результат работы автомата: 311.
Сколько существует двузначных чисел, при обработке которых автомат
выдаёт результат 201.
"""
### TODO: Ответ — 8
##res = 0
##for X in range(10, 100):
##    Y = '{}{}{}'.format(X % 4, X % 2, X % 3)
##    if Y == '201':
##        res += 1
##print(res)


"""
111) Автомат получает на вход четырёхзначное двенадцатеричное число,
содержащее только цифры из набора {1, 2, 4, 5, 6, B}. По этому числу
строится новое число по следующим правилам:
1. Вычисляются два двенадцатеричных числа — суммы цифр, стоящих в чётных
и нечётных разрядах соответственно.
2. Полученные два двенадцатеричных числа записываются в порядке невозрастания
(без разделителей).
Пример. Исходное число: 441B. Поразрядные суммы: 4 + 1 = 5; 4 + B = 13.
Результат: 135.
Укажите наибольшее число, при обработке которого автомат выдаёт результат 115.
"""
### TODO: Ответ — B241
##alpha = ['1', '2', '4', '5', '6', 'B']
##for a, b, c, d in product(alpha, repeat=4):
##    num = '{}{}'.format(*map(lambda x: to_base(x, 12), sorted([int(a, 12) + int(b, 12), int(c, 12) + int(d, 12)], reverse=True)))
##    if num == '115':
##        print('{}{}{}{}'.format(a, b, c, d))


"""
117) Автомат получает на вход четырёхзначное натуральное число и строит новое
число по следующему алгоритму:
1. вычисляются суммы первой и второй, второй и третьей и третьей и четвёртой
цифр;
2. из полученных сумм отбрасывается наименьшая;
3. остальные суммы записываются в порядке неубывания.
Пример. Исходное число:1284. Суммы: 1 + 2 = 3; 2 + 8 = 10; 8 + 4 = 12.
Отбрасывается наименьшая сумма 3. Результат: 1012.
Укажите наименьшее число, при вводе которого автомат выдаёт значение 1316.
"""
### TODO: Ответ — 1497
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = '{}{}'.format(*sorted([a + b , b + c, c + d])[1:])
##    if num == '1316':
##        print('{}{}{}{}'.format(a, b, c, d))
##        break


"""
127) Автомат получает на вход четырёхзначное натуральное число и строит новое
число по следующему алгоритму:
1. вычисляются суммы первой и второй, второй и третьей и третьей и четвёртой
цифр;
2. из полученных сумм отбрасывается наибольшая;
3. остальные суммы записываются в порядке неубывания.
Пример. Исходное число:1284. Суммы: 1 + 2 = 3; 2 + 8 = 10; 8 + 4 = 12.
Отбрасывается наибольшая сумма 12. Результат: 310.
Укажите наибольшее число, при вводе которого автомат выдаёт значение 1114.
"""
### TODO: Ответ — 9956
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = '{}{}'.format(*sorted([a + b , b + c, c + d])[:-1])
##    if num == '1114':
##        print('{}{}{}{}'.format(a, b, c, d))


"""
137) (А.Н. Носкин) На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается справа бит чётности: 0, если в двоичном коде
числа N было чётное число единиц, и 1, если нечётное.
3) К полученному результату дописывается ещё один бит чётности.
Полученная таким образом запись (в ней на два разряда больше, чем в записи
исходного числа N) является двоичной записью искомого числа R.
Укажите количество исходных чисел N, из которых с помощью этого алгоритма
могут быть получены числа R, лежащие в диапазоне 64 ≤ R < 72.
"""
### TODO: Ответ — 2
##res = 0
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for _ in range(2):
##        r += str(r.count('1') & 1)
##    r = int(r, 2)
##    if 64 <= r < 72:
##        res += 1
##print(res)


"""
147) На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается (дублируется) последняя цифра.
3) Затем справа дописывается 0, если в двоичном коде числа N чётное число
единиц, и 1, если нечётное.
4) К полученному результату дописывается ещё один бит чётности так,
чтобы количество единиц в двоичной записи полученного числа стало чётным.
Полученная таким образом запись (в ней на три разряда больше,
чем в записи исходного числа N) является двоичной записью искомого числа R.
Укажите минимальное число R, большее 105, которое могло получиться в результате
работы автомата. В ответе это число запишите в десятичной системе.
"""
### TODO: Ответ — 111
res = []
for n in range(1, 1000):
    r = bin(n)[2:]
    r += r[-1]
    r += str(r[:-1].count('1') & 1)
    r += str(r.count('1') & 1)
    r = int(r, 2)
    if r > 105:
        res.append(r)
print(min(res))
