from itertools import product


def to_base(n, b):
    a = [chr(i) for i in range(ord('0'), ord('9') + 1)] + [chr(i) for i in range(ord('a'), ord('z') + 1)]
    res = a[n % b]
    while n >= b:
        n //= b
        res += a[n % b]
    return res[::-1]


"""
Автомат обрабатывает натуральное число N < 256 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N.
2) Инвертируются все разряды исходного числа (0 заменяется на 1, 1 на 0).
3) Полученное число переводится в десятичную систему счисления.
4) Из нового числа вычитается исходное, полученная разность выводится на экран.
Для какого значения N результат работы алгоритма равен 45?
"""
### TODO: Ответ — 105
##for i in range(256):
##    s = bin(i)[2::]
##    while len(s) < 8:
##        s = '0' + s
##    s1 = ''
##    for j in s:
##        if j == '0':
##            s1 += '1'
##        else:
##            s1 += '0'
##    ii = int(s1, 2)
##    if ii - i == 45:
##        print(i)


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится двоичная запись числа N.
2. Далее эта запись обрабатывается по следующему правилу:
a) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 10; 
б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 11. 
Полученная таким образом запись является двоичной записью искомого числа R.
Например, для исходного числа 610 = 1102 результатом является число 10012 = 910, а для исходного числа 410 = 1002 результатом является число 11002 = 1210
Укажите максимальное число R, которое может быть получено при обработке числа N, меньшего 16. В ответе запишите это число в десятичной системе счисления.
"""
### TODO: Ответ – 30
##mx = 0
##for n in range(16):
##    r = bin(n)[2:]
##    if not(sum(map(int, r)) % 2):
##        r += '1'
##        r = '10' + r[2:]
##    else:
##        r += '0'
##        r = '11' + r[2:]
##    mx = max(mx, int(r, 2))
##print(mx)


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему
новое число R следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы
на 2 дописывается в конец числа (справа). Например, запись 11100
преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток
от деления суммы цифр на 2.
Полученная таким образом запись (в ней на два разряда больше,
чем в записи исходного числа N) является двоичной записью искомого числа R.
Укажите такое наименьшее число R, которое превышает 180 и может являться
результатом работы алгоритма. В ответе это число запишите в десятичной системе
счисления.
"""
### TODO: Ответ - 184
##for n in range(1000):
##    r = bin(n)[2:]
##    for i in range(2):
##        r += str(sum(map(int, r)) % 2)
##    r = int(r, 2)
##    if r > 180:
##        print(r)
##        break


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит
по нему новое число R следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы
на 2 дописывается в конец числа (справа). Например, запись 11100
преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток
от деления суммы цифр на 2.
Полученная таким образом запись (в ней на два разряда больше,
чем в записи исходного числа N) является двоичной записью искомого числа R.
Укажите такое наименьшее число R, которое превышает 150 и может являться
результатом работы алгоритма. В ответе это число запишите в десятичной системе
счисления.
"""
### TODO: Ответ - 154
##for n in range(1000):
##    r = bin(n)[2:]
##    for i in range(2):
##        r += str(sum(map(int, r)) % 2)
##    r = int(r, 2)
##    if r > 150:
##        print(r)
##        break


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R
следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец
числа (справа). Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы
цифр на 2.Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
является двоичной записью искомого числа R. Какое наименьшее число, большее 115, может быть
получено в результате работы автомата?
"""
# # TODO: Ответ – 116
# for n in range(1, 1000):
#    r = bin(n)[2:]
#    for i in range(2):
#        r += str(sum(map(int, r)) % 2)
#    r = int(r, 2)
#    if r > 115:
#        print(r)
#        break


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R
следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец
числа (справа). Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы
цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
является двоичной записью искомого числа R. Какое наибольшее число, меньшее 86, может быть
получено в результате работы автомата?
"""
### TODO: Ответ – 80
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for i in range(2):
##        r += str(sum(map(int, r)) % 2)
##    r = int(r, 2)
##    if r < 86:
##        print(r)


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится двоичная запись числа N.
2. Далее эта запись обрабатывается по следующему правилу:
a) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 1;
б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11. 
Полученная таким образом запись является двоичной записью искомого числа R.
Например, для исходного числа 610 = 1102 результатом является число 1002 = 410, а для исходного числа 410 = 1002 результатом является число 11012 = 1310 Укажите число N, после обработки которого с помощью этого алгоритма получается наименьшее значение R, большее 25. В ответе запишите это число в
десятичной системе счисления.
"""
### TODO: Ответ – 29
##res = []
##for n in range(1, 10000):
##    r = bin(n)[2:]
##    if not(sum(map(int, r)) % 2):
##        r += '0'
##        r = '1' + r[2:]
##    else:
##        r += '1'
##        r = '11' + r[2:]
##    r = int(r, 2)
##    if r > 25:
##        res.append((n, r))
##print(sorted(res, key=lambda x: x[1])[0][0])


"""
Автомат обрабатывает десятичное натуральное число N по следующему алгоритму.
1. В шестеричной записи числа N дублируется последняя цифра
2. Получившееся число переводится в двоичное представление.
3. В получившейся записи дублируется последняя цифра.
4. Полученное в результате этих операций число переводится в десятичную систему счисления.
Пример.
Дано число 13.
1310 -> 216 -> 2116 -> 10011112-> 100111112-> 15910
Укажите максимальное число, меньшее 344, которое может являться результатом выполнения алгоритма.
"""
### TODO: Ответ – 331
##for n in range(1, 10000):
##    r = to_base(n, 6)
##    r += r[-1]
##    r = bin(int(r, 6))[2:]
##    r += r[-1]
##    r = int(r, 2)
##    if r < 334:
##        print(r)


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R
следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец
числа (справа). Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы
цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
является двоичной записью искомого числа R. Укажите такое наименьшее число R, которое
превышает 130 и может являться результатом работы алгоритма. В ответе это число запишите в
десятичной системе счисления.
"""
### TODO: Ответ – 1100
##res = []
##for n in range(1, 10000):
##    r = bin(n)[2:]
##    for i in range(2):
##        r += str(sum(map(int, r)) % 2)
##    r = int(r, 2)
##    if r > 130:
##        res.append(r)
##print(min(res))


"""
Автомат обрабатывает натуральное число N < 256 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N-1.
2) Инвертируются все разряды исходного числа (0 заменяется на 1, 1 на 0).
3) Полученное число переводится в десятичную систему счисления.
Для какого значения N результат работы алгоритма равен 18?
"""
### TODO: Ответ – 238
##for n in range(1, 256):
##    r = bin(n-1)[2:]
##    r = '0' * (8 - len(r)) + r
##    r = r.replace('0', 'x').replace('1', '0').replace('x', '1')
##    r = int(r, 2)
##    if r == 18:
##        print(n)


"""
Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
1. Строится восьмибитная двоичная запись числа N.
2. Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
3. Полученное число переводится в десятичную запись.
4. Из нового числа вычитается исходное, полученная разность выводится на экран.
Пример. Дано число N = 13. Алгоритм работает следующим образом.
1. Восьмибитная двоичная запись числа N: 00001101.
2. Все цифры заменяются на противоположные, новая запись 11110010.
3. Десятичное значение полученного числа 242.
4. На экран выводится число 242 − 13 = 229.
Какое число нужно ввести в автомат, чтобы в результате получилось 111?
"""
### TODO: Ответ — 72
##for n in range(256):
##    r = bin(n)[2:]
##    r = '0' * (8-len(r)) + r
##    r = r.replace('0', 'x').replace('1', '0').replace('x', '1')
##    r = int(r, 2)
##    r -= n
##    if r == 111:
##        print(n)


"""
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R
следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец
числа (справа). Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы
цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N)
является двоичной записью искомого числа R. Укажите такое наименьшее число R, которое
превышает 118 и может являться результатом работы алгоритма. В ответе это число запишите в
десятичной системе счисления.
"""
# # TODO: Ответ – 120
# for n in range(1, 1000):
#     r = bin(n)[2:]
#     for _ in range(2):
#         r += str(sum(map(int, r)) % 2)
#     r = int(r, 2)
#     if r > 118:
#         print(r)
#         break

"""
Автомат обрабатывает натуральное число N < 256 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N-1.
2) Инвертируются все разряды исходного числа (0 заменяется на 1, 1 на 0).
3) Полученное число переводится в десятичную систему счисления.
Для какого значения N результат работы алгоритма равен 143?
"""
# # TODO: Ответ — 113
# for n in range(1, 256):
#     r = bin(n - 1)[2:]
#     r = '0' * (8 - len(r)) + r
#     r = r.translate(r.maketrans({'0': '1', '1': '0'}))
#     if int(r, 2) == 143:
#         print(n)


"""
Р-08. На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа). Например, запись 11100 преобразуется в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток от деления суммы цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число, большее, чем 137. В ответе это число запишите в десятичной системе.
"""
# # TODO: Ответ — 35
# for n in range(10000):
#     r = bin(n)[2:]
#     for _ in range(2):
#         r += str(sum(map(int, r)) % 2)
#     if int(r, 2) > 137:
#         print(n)
#         break


"""
57) Автомат получает на вход четырёхзначное число. По этому числу строится
новое число по следующим правилам.
1. Складываются первая и вторая, а также третья и четвёртая цифры исходного
числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 3165. Суммы: 3 + 1 = 4; 6 + 5 = 11. Результат: 114.
Укажите максимальное число, в результате обработки которого, автомат выдаст
число 1412.
"""
### TODO: Ответ — 9593
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , c + d], reverse=True)))
##    if num == 1412:
##        print('{}{}{}{}'.format(a, b, c, d))


"""
67) Автомат получает на вход трёхзначное число. По этому числу строится новое
число по следующим правилам.
1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 348. Суммы: 3 + 4 = 7; 4 + 8 = 12. Результат: 127.
Укажите наибольшее число, в результате обработки которого автомат выдаст
число 148.
"""
### TODO: Ответ — 953
##for a, b, c in product(range(10), repeat=3):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , b + c], reverse=True)))
##    if num == 148:
##        print('{}{}{}'.format(a, b, c))


"""
71) (Н. Леко) Автомат получает на вход два трехзначных числа.
По этим числам строится новое число по следующим правилам.
Вычисляются три числа – сумма старших разрядов заданных трехзначных чисел,
сумма средних разрядов этих чисел, сумма младших разрядов.
Полученные три числа записываются друг за другом в порядке невозрастания
(без разделителей).
Пример. Исходные трехзначные числа:  835, 196. Поразрядные суммы: 9, 12, 11.
Результат: 12119
Какое наименьшее значение может иметь одно из чисел, полученных на входе,
если другое число равно 694, а в результате работы автомата получено число
11108?
"""
### TODO: Ответ — 217
##for a1, b1, c1 in product(range(10), repeat=3):
##    if a1 == 0:
##        continue
##    num = int('{}{}{}'.format(*sorted([a1 + 6, b1 + 9, c1 + 4], reverse=True)))
##    if num == 11108:
##        print('{}{}{}'.format(a1, b1, c1))
##        break


"""
77) Автомат получает на вход четырехзначное число. По этому числу строится
новое число по следующим правилам. 
1. Складываются первая и вторая, а также третья и четвертая цифры исходного
числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 3165. Суммы: 3+1 = 4; 6+5 = 11. Результат: 114.
Укажите наибольшее число, в результате обработки которого, автомат
выдаст число 1311.
"""
### TODO: Ответ — 9492
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , c + d], reverse=True)))
##    if num == 1311:
##        print('{}{}{}{}'.format(a, b, c, d))


"""
85) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему
новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются справа ещё два разряда по следующему правилу:
а) в конец числа (справа) дописывается 1, если число единиц в двоичной записи
числа чётно, и 0, если число единиц в двоичной записи числа нечётно.
б) к этой записи справа дописывается 1, если остаток от деления количества
единиц на 2 равен 0, и 0, если остаток от деления количества единиц на 2
равен 1.
Полученная таким образом запись (в ней на два разряда больше, чем в записи
исходного числа N) является двоичной записью искомого числа R. Укажите
минимальное число R, которое превышает 54 и может являться результатом
работы алгоритма. В ответе это число запишите в десятичной системе.
"""
### TODO: Ответ — 56
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for _ in range(2):
##        r += '1' if not r.count('1') & 1 else '0'
##    r = int(r, 2)
##    if r > 54:
##        res.append(r)
##print(min(res))
    

"""
87) Автомат получает на вход трёхзначное число. По этому числу строится новое
число по следующим правилам.
1. Складываются первая и вторая, а также вторая и третья цифры исходного числа.
2. Полученные два числа записываются друг за другом в порядке убывания
(без разделителей).
Пример. Исходное число: 843. Суммы: 8 + 4 = 12; 4 + 3 = 7. Результат: 127.
Сколько существует чисел, в результате обработки которых автомат выдаст число
1715?
"""
### TODO: Ответ — 4
##res = 0
##for a, b, c in product(range(10), repeat=3):
##    if a == 0:
##        continue
##    num = int('{}{}'.format(*sorted([a + b , b + c], reverse=True)))
##    if num == 1715:
##        res += 1
##print(res)


"""
97) На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается справа бит чётности: 0,
если в двоичном коде числа N было чётное число единиц, и 1, если нечётное.
3) К полученному результату дописывается ещё один бит чётности.
Полученная таким образом запись (в ней на два разряда больше,
чем в записи исходного числа N) является двоичной записью искомого числа R.
Укажите минимальное число R, большее 180, которое может быть получено в
результате работы этого алгоритма. В ответе это число запишите в десятичной
системе.
"""
### TODO: Ответ — 184
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for _ in range(2):
##        r += str(r.count('1') & 1)
##    r = int(r, 2)
##    if r > 180:
##        res.append(r)
##print(min(res))


"""
98)	Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам. 
1. Перемножаются первая и вторая, а также вторая и третья цифры.
2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
Пример. Исходное число: 631. Произведение: 6*3 = 18; 3*1 = 3. Результат: 318. Укажите наибольшее число, при обработке которого автомат выдаёт результат 621.
"""
# # TODO: Ответ — 732
# for n in product([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], repeat=3):
#     if n[0] == 0:
#         continue
#     n1 = sorted([n[0] * n[1], n[1] * n[2]])
#     r = int(''.join(map(str, n1)))
#     if r == 621:
#         print('{}{}{}'.format(*n))


"""
100)	Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам. 
1. Складываются отдельно первая, третья и пятая цифры, а также вторая и четвёртая цифры.
2. Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
Пример. Исходное число: 63 179. Суммы: 6 + 1 + 9 = 16; 3 + 7 = 10. Результат: 1016.
Укажите наименьшее число, при обработке которого автомат выдаёт результат 723.
"""
### TODO: Ответ — 50979
##res = []
##for n in product(range(0, 10), repeat=5):
##    if n[0] == 0:
##        continue
##    nums = n[0] + n[2] + n[4], n[1] + n[3]
##    r = int(str(min(nums)) + str(max(nums)))
##    if r == 723:
##        res.append(n)
##res = min(res)
##print('{}{}{}{}{}'.format(res[0], res[1], res[2], res[3], res[4]))
    
    
"""
107) Автомат получает на вход натуральное число X.
По этому числу строится трёхзначное число Y по следующим правилам.
1. Первая цифра числа Y (разряд сотен) – остаток от деления X на 4.
2. Вторая цифра числа Y (разряд десятков) – остаток от деления X на 2.
3. Третья цифра числа Y (разряд единиц) – остаток от деления X на 3.
Пример. Исходное число: 55. Остаток от деления на 4 равен 3;
остаток от деления на 2 равен 1; остаток от деления на 3 равен 1.
Результат работы автомата: 311.
Сколько существует двузначных чисел, при обработке которых автомат
выдаёт результат 201.
"""
### TODO: Ответ — 8
##res = 0
##for X in range(10, 100):
##    Y = '{}{}{}'.format(X % 4, X % 2, X % 3)
##    if Y == '201':
##        res += 1
##print(res)


"""
111) Автомат получает на вход четырёхзначное двенадцатеричное число,
содержащее только цифры из набора {1, 2, 4, 5, 6, B}. По этому числу
строится новое число по следующим правилам:
1. Вычисляются два двенадцатеричных числа — суммы цифр, стоящих в чётных
и нечётных разрядах соответственно.
2. Полученные два двенадцатеричных числа записываются в порядке невозрастания
(без разделителей).
Пример. Исходное число: 441B. Поразрядные суммы: 4 + 1 = 5; 4 + B = 13.
Результат: 135.
Укажите наибольшее число, при обработке которого автомат выдаёт результат 115.
"""
### TODO: Ответ — B241
##alpha = ['1', '2', '4', '5', '6', 'B']
##for a, b, c, d in product(alpha, repeat=4):
##    num = '{}{}'.format(*map(lambda x: to_base(x, 12), sorted([int(a, 12) + int(b, 12), int(c, 12) + int(d, 12)], reverse=True)))
##    if num == '115':
##        print('{}{}{}{}'.format(a, b, c, d))


"""
117) Автомат получает на вход четырёхзначное натуральное число и строит новое
число по следующему алгоритму:
1. вычисляются суммы первой и второй, второй и третьей и третьей и четвёртой
цифр;
2. из полученных сумм отбрасывается наименьшая;
3. остальные суммы записываются в порядке неубывания.
Пример. Исходное число:1284. Суммы: 1 + 2 = 3; 2 + 8 = 10; 8 + 4 = 12.
Отбрасывается наименьшая сумма 3. Результат: 1012.
Укажите наименьшее число, при вводе которого автомат выдаёт значение 1316.
"""
### TODO: Ответ — 1497
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = '{}{}'.format(*sorted([a + b , b + c, c + d])[1:])
##    if num == '1316':
##        print('{}{}{}{}'.format(a, b, c, d))
##        break


"""
127) Автомат получает на вход четырёхзначное натуральное число и строит новое
число по следующему алгоритму:
1. вычисляются суммы первой и второй, второй и третьей и третьей и четвёртой
цифр;
2. из полученных сумм отбрасывается наибольшая;
3. остальные суммы записываются в порядке неубывания.
Пример. Исходное число:1284. Суммы: 1 + 2 = 3; 2 + 8 = 10; 8 + 4 = 12.
Отбрасывается наибольшая сумма 12. Результат: 310.
Укажите наибольшее число, при вводе которого автомат выдаёт значение 1114.
"""
### TODO: Ответ — 9956
##for a, b, c, d in product(range(10), repeat=4):
##    if a == 0:
##        continue
##    num = '{}{}'.format(*sorted([a + b , b + c, c + d])[:-1])
##    if num == '1114':
##        print('{}{}{}{}'.format(a, b, c, d))


"""
137) (А.Н. Носкин) На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается справа бит чётности: 0, если в двоичном коде
числа N было чётное число единиц, и 1, если нечётное.
3) К полученному результату дописывается ещё один бит чётности.
Полученная таким образом запись (в ней на два разряда больше, чем в записи
исходного числа N) является двоичной записью искомого числа R.
Укажите количество исходных чисел N, из которых с помощью этого алгоритма
могут быть получены числа R, лежащие в диапазоне 64 ≤ R < 72.
"""
### TODO: Ответ — 2
##res = 0
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    for _ in range(2):
##        r += str(r.count('1') & 1)
##    r = int(r, 2)
##    if 64 <= r < 72:
##        res += 1
##print(res)


"""
138)	На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается (дублируется) последняя цифра.
3) Затем справа дописывается бит чётности: 0, если в двоичном коде полученного числа чётное число единиц, и 1, если нечётное.
4) К полученному результату дописывается ещё один бит чётности.
Полученная таким образом запись (в ней на три разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите минимальное число R, большее 114, которое может быть получено в результате работы этого алгоритма. В ответе это число запишите в десятичной системе.
"""
# # TODO: Ответ – 126
# for n in range(0, 1000):
#     r = bin(n)[2:]
#     r += r[-1]
#     for i in range(2):
#         r += '0' if not(r.count('1') % 2) else '1'
#     r = int(r, 2)
#     if r > 114:
#         print(r)
#         break


"""
144)	(Досрочный ЕГЭ-2018) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются справа ещё два разряда по следующему правилу: если N чётное, в конец числа (справа) дописываются два нуля, в противном случае справа дописываются две единицы. Например, двоичная запись 1001 числа 9 будет преобразована в 100111.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью числа – результата работы данного алгоритма. Укажите минимальное число N, для которого результат работы алгоритма будет больше 115. В ответе это число запишите в десятичной системе счисления.
"""
### TODO: Ответ - 29
# for n in range(1000):
#     r = bin(n)[2:]
#     if not (n % 2):
#         r += '00'
#     else:
#         r += '11'
#     r = int(r, 2)
#     if r > 115:
#         print(n)
#         break


"""
147) На вход алгоритма подаётся натуральное число N.
Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописывается (дублируется) последняя цифра.
3) Затем справа дописывается 0, если в двоичном коде числа N чётное число
единиц, и 1, если нечётное.
4) К полученному результату дописывается ещё один бит чётности так,
чтобы количество единиц в двоичной записи полученного числа стало чётным.
Полученная таким образом запись (в ней на три разряда больше,
чем в записи исходного числа N) является двоичной записью искомого числа R.
Укажите минимальное число R, большее 105, которое могло получиться в результате
работы автомата. В ответе это число запишите в десятичной системе.
"""
# # TODO: Ответ — 111
# res = []
# for n in range(1, 1000):
#     r = bin(n)[2:]
#     r += r[-1]
#     r += str(r[:-1].count('1') & 1)
#     r += str(r.count('1') & 1)
#     r = int(r, 2)
#     if r > 105:
#         res.append(r)
# print(min(res))


"""
152)	На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) Затем справа дописываются два разряда: символы 01, если число N чётное, и 10, если нечётное.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите минимальное число R, большее 81, которое может являться результатом работы этого алгоритма. В ответе это число запишите в десятичной системе.
"""
### TODO: Ответ — 86
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    r += '01' if not n & 1 else '10'
##    r = int(r, 2)
##    if r > 81:
##        res.append(r)
##print(min(res))


"""
156)	На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1) Строится двоичная запись числа N.
2) Затем справа дописываются два разряда: символы 01, если число N чётное, и 10, если нечётное.
Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите минимальное число N, после обработки которого автомат получает число, большее 138. В ответе это число запишите в десятичной системе.
"""
# # TODO: Ответ — 35
# for n in range(1, 100):
#     r = int(bin(n)[2:] + '10', 2) if n % 2 else int(bin(n)[2:] + '01', 2)
#     if r > 138:
#         print(n)
#         break


"""
163)	Автомат обрабатывает натуральное число N по следующему алгоритму:
1) Строится двоичная запись числа N.
2) Запись «переворачивается», то есть читается справа налево. Если при этом появляются ведущие нули, они отбрасываются.
3) Полученное число переводится в десятичную запись и выводится на экран.
Какое наибольшее число, не превышающее 500, после обработки автоматом даёт результат 11?
"""
# # TODO: Ответ — 416
# for n in range(1, 501):
#     b = bin(n)[2:]
#     if int(b[::-1], 2) == 11:
#         print(f'{n}: {b, b[::-1], int(b[::-1], 2)}')


"""
169)	Автомат обрабатывает натуральное число N по следующему алгоритму:
1) Строится двоичная запись числа N.
2) Запись «переворачивается», то есть читается справа налево. Если при этом появляются ведущие нули, они отбрасываются.
3) Полученное число переводится в десятичную запись и выводится на экран.
Какое наименьшее число, превышающее 500, после обработки автоматом даёт результат 19?
"""
# # TODO: Ответ — 800
# for n in range(500, 10000):
#     r = bin(n)[2:]
#     r = str(r[::-1].rstrip('0'))
#     if int(r, 2) == 19:
#         print(n)
#         break


"""
170)	Автомат обрабатывает натуральное число N по следующему алгоритму:
1) Строится двоичная запись числа N.
2) Запись «переворачивается», то есть читается справа налево. Если при этом появляются ведущие нули, они отбрасываются.
3) Полученное число переводится в десятичную запись и выводится на экран.
Какое наименьшее число, превышающее 1000, после обработки автоматом даёт результат 29?
"""
### TODO: Ответ – 23
##for n in range(1, 1000):
##    r = int(bin(n)[2:][::-1], 2)
##    if r == 29:
##        print(n)
##        break


"""
181)	(А.М. Кабанов, Тольятти)  Автомат обрабатывает натуральное число N < 128 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N.
2) Инвертируются разряды исходного числа (0 заменяется на 1, 1 на 0).
3) К полученному двоичному числу прибавляют единицу.
4) Полученное число переводится в десятичную систему счисления.
Для какого числа N результат работы алгоритма равен 221?
"""
### TODO: Ответ – 35
##for n in range(256):
##    r = ('0' * (8 -len(bin(n)[2:])) + bin(n)[2:]).replace('0', 'x').replace('1', '0').replace('x', '1')
##    if int(r, 2) + 1 == 221:
##        print(n)


"""
182)	Автомат обрабатывает натуральное число N < 256 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N–1.
2) Инвертируются разряды исходного числа (0 заменяется на 1, 1 на 0).
3) Полученное число переводится в десятичную систему счисления.
Чему равен результат работы алгоритма для N = 178?
"""
# # TODO: Ответ – 77
# for n in range(256):
#     r = bin(n)[2:]
#     r = '0' * (8 - len(r)) + r
#     r = r.replace('0', 'x').replace('1', '0').replace('x', '1')
#     r = int(r, 2)
#     if r == 178:
#         print(n)


"""
190)	Автомат обрабатывает натуральное число N по следующему алгоритму:
1. Строится двоичная запись числа N без ведущих нулей.
2. Если в полученной записи единиц больше, чем нулей, то справа приписывается единица. Если нулей больше или нулей и единиц поровну, справа приписывается ноль.
3. Полученное число переводится в десятичную запись и выводится на экран.
Какое наименьшее число, превышающее 36, может получиться в результате работы автомата?
"""
# # TODO: Ответ – 39
# for n in range(1, 10000):
#     r = bin(n)[2:]
#     r += '1' if r.count('1') > r.count('0') else '0'
#     r = int(r, 2)
#     if r > 36:
#         print(r)
#         break


"""
194)	Автомат обрабатывает натуральное число N по следующему алгоритму:
1. Строится двоичная запись числа N без ведущих нулей.
2. Если в полученной записи единиц больше, чем нулей, то справа приписывается единица. Если нулей больше или нулей и единиц поровну, справа приписывается ноль.
3. Полученное число переводится в десятичную запись и выводится на экран.
Какое наибольшее число, меньшее, чем 100, может получиться в результате работы автомата?
"""
### TODO: Ответ – 98
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    if r.count('1') > r.count('0'):
##        r += '1'
##    else:
##        r += '0'
##    r = int(r, 2)
##    if r < 100:
##        print(r)


"""
213)	Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
            возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно наименьшее возможное трёхзначное число N, в результате обработки которого на экране автомата появится число 63?
"""
# # TODO: Ответ – 309
# for n in product('0123456789', repeat=3):
#     if n[0] == '0':
#         continue
#     n = ''.join(n)
#     gen = [int(''.join(i)) for i in set(permutations(n, r=2)) if i[0] != '0']
#     if max(gen) - min(gen) == 63:
#         print(n)
#         break


"""
214)	Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
            возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно наибольшее возможное трёхзначное число N, в результате обработки которого на экране автомата появится число 14?
"""
### TODO: Ответ – 540
##for n in product('0123456789', repeat=3):
##    if n[0] == '0':
##        continue
##    mn, mx = 10**10, 0
##    for p in set(permutations(n, r=2)):
##        if p[0] == '0':
##            continue
##        mn = min(mn, int(''.join(p)))
##        mx = max(mx, int(''.join(p)))
##    r = mx - mn
##    if r == 14:
##        print(''.join(n))


"""
215)	Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
            возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно количество трёхзначных чисел N, в результате обработки которых на экране автомата появится число 35?
"""
# # TODO: Ответ – 882
# c = 0
# for n in range(100, 1000):
#     nmb = list(set(int(''.join(i)) for i in permutations(str(n), r=2) if 10 <= int(''.join(i)) <= 100))
#     if max(nmb) - min(nmb):
#         c += 1
# print(c)



"""
217)	Автомат обрабатывает трёхзначное натуральное число N по следующему алгоритму.
1. Из цифр, образующих десятичную запись N, строятся наибольшее и наименьшее 
            возможные двузначные числа (числа не могут начинаться с нуля).
2. На экран выводится разность полученных двузначных чисел.
Пример. Дано число N = 351. Алгоритм работает следующим образом.
1. Наибольшее двузначное число из заданных цифр – 53, наименьшее – 13.
2. На экран выводится разность 53 – 13 = 40.
Чему равно количество чисел N на отрезке [100; 200], в результате обработки которых на экране автомата появится число 30?
"""
### TODO: Ответ — 7
##c = 0
##for n in product('0123456789', repeat=3):
##    if n[0] == '0':
##        continue
##    n = ''.join(n)
##    mn = 99
##    mx = 10
##    for r in permutations(n, r=2):
##        if r[0] == '0':
##            continue
##        r = ''.join(r)
##        mn = min(mn, int(r))
##        mx = max(mx, int(r))
##    if 100 <= int(n) <= 200 and mx - mn == 30:
##        c += 1
##print(c)


"""
224)	Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1. Строится двоичная запись числа N.
2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4. Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом:
1. Двоичная запись числа N: 1011.
2. Вторая справа цифра 1, новая запись 10111.
3. Вторая слева цифра 0, новая запись 101110.
4. Результат работы алгоритма R = 46.
При каком наименьшем числе N в результате работы алгоритма получится R > 170? В ответе запишите это число в десятичной системе счисления.
"""
### TODO: Ответ — 43
# for i in range(2, 100):
#     n = bin(i)[2::]
#     n += n[-2]
#     n += n[1]
#     r = int(n, 2)
#     if r > 170:
#         print(i, r)
#         break


"""
225)	Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1. Строится двоичная запись числа N.
2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4. Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом:
1. Двоичная запись числа N: 1011.
2. Вторая справа цифра 1, новая запись 10111.
3. Вторая слева цифра 0, новая запись 101110.
4. Результат работы алгоритма R = 46.
При каком наименьшем числе N в результате работы алгоритма получится R > 210? В ответе запишите это число в десятичной системе счисления.
"""
# # TODO: Ответ – 53
# for n in range(2, 1000):
#     r = bin(n)[2:]
#     r += r[-2]
#     r += r[1]
#     r = int(r, 2)
#     if r > 210:
#         print(n)
#         break


"""
227)	Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1. Строится двоичная запись числа N.
2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4. Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом:
1. Двоичная запись числа N: 1011.
2. Вторая справа цифра 1, новая запись 10111.
3. Вторая слева цифра 0, новая запись 101110.
4. Результат работы алгоритма R = 46.
При каком наибольшем числе N в результате работы алгоритма получится число, не превышающее 165? В ответе запишите это число в десятичной системе счисления.
"""
### TODO: Ответ - 41
##for n in range(2, 1000):
##    r = bin(n)[2:]
##    r += r[-2]
##    r += r[1]
##    r = int(r, 2)
##    if r <= 165:
##        print(n)


"""
228)	Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1. Строится двоичная запись числа N.
2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4. Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом:
1. Двоичная запись числа N: 1011.
2. Вторая справа цифра 1, новая запись 10111.
3. Вторая слева цифра 0, новая запись 101110.
4. Результат работы алгоритма R = 46.
При каком наибольшем числе N в результате работы алгоритма получится число, не превышающее 190? В ответе запишите это число в десятичной системе счисления.
"""
# # TODO: Ответ — 47
# for n in range(2, 1000):
#     r = bin(n)[2:]
#     r += r[-2]
#     r += r[1]
#     r = int(r, 2)
#     if r <= 190:
#         print(n)


"""
231)	Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1. Строится двоичная запись числа N.
2. В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3. В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4. Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом:
1. Двоичная запись числа N: 1011.
2. Вторая справа цифра 1, новая запись 10111.
3. Вторая слева цифра 0, новая запись 101110.
4. Результат работы алгоритма R = 46.
Для скольких значений N в результате работы алгоритма получится число, принадлежащее отрезку [150; 250]? 
"""
# # TODO: Ответ — 24
# c = 0
# for n in range(2, 100000):
#     n = bin(n)[2::]
#     n = n + n[-2] + n[1]
#     if 150 <= int(n, 2) <= 250:
#         c += 1
# print(c)


"""
233)	Автомат обрабатывает десятичное натуральное число N по следующему алгоритму. 
1. Строится двоичная запись числа, 
2. К полученному числу справа дописывается 0, если в числе единиц больше, чем нулей; иначе дописывается 1.
3. Из середины двоичного числа убирается 2 разряда, если количество разрядов получилось четным, и 3 разряда, если нечетное. 
4. Полученное число переводится в десятичную систему счисления и является результатом работы автомата. 
Для скольких различных значений N в результате работы автомата получается число 58?
"""
# # TODO: Ответ – 11
# c = 0
# for n in range(1, 10000):
#     r = bin(n)[2:]
#     r += '0' if r.count('1') > r.count('0') else '1'
#     r = r[:len(r) // 2 - 1] + r[len(r) // 2 + 1:] if not(len(r) % 2) else r[:len(r) // 2 - 1] + r[len(r) // 2 + 2:]
#     if r == '':
#         r = '0'
#     r = int(r, 2)
#     if r == 58:
#         c += 1
# print(c)


"""
236)	(Е. Джобс) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом. 
1) Строится двоичная запись числа N.
2) К этой записи дописываются справа ещё два разряда по следующему правилу: если двоичная запись определяет чётное число, в конец числа (справа) дописывается 1, в противном случае справа дописывается 0.
3) Пункт 2 повторяется ещё один раз.
Например, двоичная запись 1001 числа 9 будет преобразована в 100101. Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью числа – результата работы данного алгоритма. 
Укажите максимальное число N, для которого результат работы алгоритма будет меньше 171. В ответе это число запишите в десятичной системе счисления.
"""
# # TODO: Ответ — 42
# for i in range(10000):
#     n = bin(i)[2::]
#     for j in range(2):
#         if not (i % 2):
#             n = n + '0'
#         else:
#             n = n + '1'
#     if int(n, 2) < 171:
#         print(i)


"""
240)	(Е. Джобс) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом. 
1) Строится двоично-десятичное представление – каждый разряд десятичного числа кодируется с помощью 4 битов, затем полученные коды записываются друг за другом с сохранением незначащих нулей.
2) Полученная двоичная последовательность инвертируется – все нули меняются на единицы, а все единицы на нули.
3) Полученное в результате этих операций число переводится в десятичную систему счисления.
Пример. Дано число 13. Оно преобразуется следующим образом:
13  00010011ДД  111011002  236.
Здесь нижний индекс «ДД» обозначает двоично-десятичную систему. Укажите число N, в результате обработки которого с помощью этого алгоритма получается число 151.
"""
# # TODO: Ответ — 68
# def dd4(n: int) -> str:
#     res = ''
#     for i in str(n):
#         res += bin(int(i))[2::].zfill(4)
#     return res
#
#
# def invert(s: str) -> str:
#     return s.replace('1', '2').replace('0', '1').replace('2', '0')
#
#
# for n in range(1, 100):
#     r = invert(dd4(n))
#     if int(r, 2) == 151:
#         print(n, r, int(r, 2))


"""
254)	Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
1. Строится двоичная запись числа N.
2. Подсчитывается количество нулей и единиц в полученной записи. Если их количество одинаково, в конец записи добавляется её последняя цифра. В противном случае в конец записи добавляется цифра, которая встречается реже.
3. Шаг 2 повторяется ещё два раза.
4. Результат переводится в десятичную систему счисления.
При каком наибольшем исходном числе N < 100 в результате работы алгоритма получится число, которое делится на 4 и не делится на 8?
"""
# # TODO: Ответ —
# for i in range(100):
#     for j in range(3):
#         n = bin(i)[2::]
#         z = n.count('0')
#         o = n.count('1')
#         if z == o:
#             n += n[-1]
#         else:
#             if z > o:
#                 n += '1'
#             else:
#                 n += '0'
#     n = int(n, 2)
#     if not(n % 4) and n % 8:
#         print(i)


"""
255)	Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R следующим образом:
1. Строится двоичная запись числа N.
2. Подсчитывается количество нулей и единиц в полученной записи. Если их количество одинаково, в конец записи добавляется её последняя цифра. В противном случае в конец записи добавляется цифра, которая встречается реже.
3. Шаг 2 повторяется ещё два раза.
4. Результат переводится в десятичную систему счисления.
При каком наибольшем исходном числе N < 500 в результате работы алгоритма получится число, которое делится на 4 и не делится на 8?
"""
### TODO: Ответ – 225
##for n in range(2, 501):
##    r = bin(n)[2:]
##    for _ in range(3):
##        e = r.count('1')
##        z = r.count('0')
##        if e == z:
##            r += r[-1]
##        else:
##            r += '0' if z < e else '1'
##    r = int(r, 2)
##    if not r % 4 and r % 8:
##        print(n)


"""
269)	(В.Н. Шубинкин)  На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописывается ещё три или четыре разряда по следующему правилу: если N нечётное, то слева к нему приписывается "1", а справа - "11". В противном случае слева приписывается "11", а справа "00".
Например, N = 510 = 1012 => 1101112 = 5510 = R
Полученная таким образом запись (в ней на три или четыре разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите наибольшее число R, меньшее 127, которое может быть получено с помощью описанного алгоритма. В ответ запишите это число в десятичной системе счисления.
"""
### TODO: Ответ — 120
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2:]
##    r = '1' + r + '11' if int(r, 2) & 1 else '11' + r + '00'
##    if int(r, 2) < 127:
##        res.append(int(r, 2))
##print(max(res))


"""
292)	(ЕГЭ-2022) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится двоичная запись числа N.
2. Далее эта запись обрабатывается по следующему правилу: 
а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а затем два левых разряда заменяются на 10;
б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а затем два левых разряда заменяются на 11.
3. Результат переводится в десятичную систему и выводится на экран.
Полученная таким образом запись является двоичной записью искомого числа R. 
Например, для исходного числа 6 = 1102 результатом является число 10002 = 8, а для исходного числа 4 = 1002 результатом является число 11012 = 13.
Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число R, меньшее, чем 35. 
"""
# # TODO: Ответ — 24
# res = []
# for n in range(1, 1000):
#     r = bin(n)[2::]
#     if not (sum(map(int, r)) % 2):
#         r = '10' + r[2::] + '0'
#     else:
#         r = '11' + r[2::] + '1'
#     if int(r, 2) < 35:
#         res.append(n)
# print(res[-1])


"""
294)	(А. Сардарян) На вход алгоритма подаётся четырёхзначное натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Если число N четное, то цифры этого числа сортируются в порядке убывания, затем полученное число делится на 2 нацело (остаток отбрасывается). Полученное значение является числом R.
Пример: N = 1488 => R = 8841//2 = 4420.
2. Если число N нечетное, то цифры этого числа сортируются в порядке возрастания, затем полученное число умножается на 2. Полученное значение является числом R.
Пример: N = 3807 => R = 378·2 = 756.
Укажите наименьшее число R, которое больше соответствующего исходного числа N на 1.
"""
# # TODO: Ответ – 2105
# for n in range(1000, 10000):
#     if not(n & 1):
#         r = int(''.join(sorted(str(n), reverse=True))) // 2
#     else:
#         r = int(''.join(sorted(str(n)))) * 2
#     if r - n == 1:
#         print(r)
#         break


"""
295)	(А. Сардарян) На вход алгоритма подаётся два натуральных числа N и M. Алгоритм строит по ним новое число R следующим образом.
1. Вычисляется число SN как квадрат суммы цифр двоичной записи числа N.
2. Вычисляется число SM как квадрат суммы цифр двоичной записи числа M.
3. Результат R вычисляется как SN – SM.
Укажите минимальную сумму чисел N и M, при которых получается R = 33. 
"""
### TODO: Ответ - 142
##res = []
##for n in range(1000):
##    for m in range(1000):
##        r = sum(map(int,bin(n)[2:]))**2 - sum(map(int,bin(m)[2:]))**2
##        if r == 33:
##            res.append(n + m)
##print(min(res))


"""
296)	(В. Шубинкин) Автомат производит первичную проверку правильности номера банковской карты. Он получает на вход число N из 16 цифр и обрабатывает его по следующим правилам (вариант алгоритма Лу́на):
– цифры числа нумеруются справа налево, начиная с нуля;
– цифры, стоящие на нечётных позициях, увеличиваются в два раза. Если при этом получается двузначное число, его цифры складываются;
– складываются все цифры на чётных позициях и преобразованные цифры на нечётных позициях;
– если полученная сумма кратна 10, считается, что номер корректный.
Например, для числа 4096 8308 0309 8323 сумма цифр на чётных позициях (с конца) 3+3+9+3+8+3+6+0=35, сумма преобразованных цифр на нечётных позициях 4+7+0+0+0+7+9+8=35. Общая сумма 70 кратна 10, значит номер корректен.
Определите наименьшее число N, большее 1234 5678 9101 1121, которое может быть корректным номером согласно указанному алгоритму. Укажите в ответе последние 8 цифр числа.
"""
### TODO: Ответ – 91011128
##for i in range(1234567891011121, 10000000000000000):
####    n = (4, 0, 9, 6, 8, 3, 0, 8, 0, 3, 0, 9, 8, 3, 2, 3)
##    n = tuple(map(int, str(i)))
##    if n[0] == 0:
##        continue
##    nch = list(map(lambda x: sum(map(int, str(x * 2))), n))
##    if sum([nch[i] for i in range(len(nch)) if not (i % 2)] + [n[i] for i in range(len(n)) if i % 2]) % 10 == 0:
##        print(n)
##        break


"""
306)	(А. Игнатюк) Компьютер по имени Иннокентий преобразует натуральное число N по следующим правилам и получает число R:
1) Строится двоичная запись числа N.
2) Если количество цифр в двоичной записи числа N четно, то справа приписывается 10, если нечётно, то слева приписывается 11.
Полученная таким образом запись является двоичной записью искомого числа R. Найдите количество чисел N из отрезка [100; 200], для которых результат работы компьютера будет четным.
"""
### TODO: Ответ – 87
##c = 0
##for n in range(100, 201):
##    r = bin(n)[2:]
##    r = r + '10' if not len(r) & 1 else '11' + r
##    if not int(r, 2) & 1:
##        c += 1
##print(c)
