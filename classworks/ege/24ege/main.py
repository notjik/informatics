import re

"""
Текстовый файл 24-211.txt содержит строку из набора A, B, C, D, E, F, всего не более чем из 106 символов. 
Найдите максимальное количество подряд идущих четвёрок символов ABEC, BDAC, CAFB, CFBA, стоящих одна за другой и 
пересекающихся с соседними четвёрками одной буквой. Например, в строке BDEABECAFBDACBD такие пары составляют подстроку 
ABECAFBDAC = ABEC + СAFB + ВDAC, итого 3 четвёрки.
"""
# # TODO: Ответ — 81
with open('data/24-211.txt') as f:
    s = f.read()
COMBINATIONS = 'ABEC, BDAC, CAFB, CFBA'.split(', ')
patterns = COMBINATIONS[:]
c = 1
while True:
    tmp = []
    for elem in patterns:
        for item in COMBINATIONS:
            if elem[-1] != item[0]:
                continue
            if elem[:-1] + item in s:
                tmp.append(elem[:-1] + item)
    if not tmp:
        print(patterns)
        print(c)
        break
    patterns = tmp[:]
    c += 1
    print(len(tmp))


'''
1) В текстовом файле  k7-0.txt находится цепочка из символов латинского
алфавита A, B, C. Найдите длину самой длинной подцепочки, состоящей из
символов C.
'''
##with open('data/k7-0.txt') as f: #1 
##    s = f.readline()
##
##c = 0 # (вариант 1)
##mx = 0
##for x in s:
##    if x == 'C':
##        c += 1
##    else:
##        c = 0
##    mx = max(mx, c)
##print(mx)
##
##s1 = 'C' # (вариант 2)
##mx = 0
##while s1 in s:
##    mx = max(mx, len(s1))
##    s1 += 'C'
##print(mx)


'''
21) (А.М. Кабанов) В текстовом файле k7a-1.txt находится цепочка из символов
латинского алфавита A, B, C, D, E. Найдите длину самой длинной подцепочки,
состоящей из символов A, B или C (в произвольном порядке).
'''
##with open('data/k7a-1.txt') as f: #21
##    s = f.readline()
##c = 0
##mx = 0
##for x in s:
##    if x not in 'DE':
##        c += 1
##    else:
##        c = 0
##    mx = max(mx, c)
##print(mx)


'''
27) (А.М. Кабанов) В текстовом файле k7b-1.txt находится цепочка из символов
латинского алфавита A, B, C, D, E. Найдите максимальную длину цепочки вида
EABEABEABE... (состоящей из фрагментов EAB, последний фрагмент может быть неполным).
'''
##with open('data/k7b-1.txt') as f: #21
##    s = f.readline()
##s1 = 'EAB'
##while s1 in s:
##    s1 += 'EAB'
##s1 = s1[:-3]
##if s1 + 'E' in s:
##    s1 += 'E'
##if s1 + 'EA' in s:
##    s1 += 'A'
##print(len(s1))


'''
33) (А.М. Кабанов) В текстовом файле k7c-1.txt находится цепочка из символов
латинского алфавита A, B, C, D, E. Найдите количество цепочек длины 3,
удовлетворяющих следующим условиям: 
• 1-й символ – один из символов B, C или D;
• 2-й символ – один из символов B, D, E, который не совпадает с первым; 
• 3-й символ – один из символов B, C, E, который не совпадает со вторым.
'''
##with open('data/k7c-1.txt') as f: #33
##    s = f.readline()
##c = 0
##for i in range(len(s)-2):
##    if s[i] in 'BCD' and s[i+1] in 'BDE' and s[i] != s[i+1] and \
##       s[i+2] in 'BCE' and s[i+1] != s[i+2]:
##        c += 1
##print(c)


'''
38) (А.М. Кабанов) В текстовом файле k7c-6.txt находится цепочка из символов
латинского алфавита A, B, C, D, E, F. Найдите количество цепочек длины 3, в
которых символы не совпадают.
'''
##with open('data/k7c-6.txt') as f: #38
##    s = f.readline()
##c = 0
##for i in range(len(s)-2):
##    if len(set(s[i:i+3])) == 3:
##        c += 1
##print(c)


'''
39) (Б.С. Михлин) В текстовом файле  k7-m1.txt находится цепочка из прописных
(заглавных) символов латинского алфавита A, B, C. Найдите длину самой короткой
подцепочки, состоящей из символов C (C-подцепочки). В ответе через пробел
укажите: длину найденной подцепочки (если C-подцепочек нет, то 0),
количество C-подцепочек и длину исходной цепочки.
'''
##with open('data/k7-m1.txt') as f: #39
##    s = f.readline()
##c = 0
##l = 0
##mn = 10**6
##for i in s:
##    if i == 'C':
##        l += 1
##    elif l > 0:
##        mn = min(mn, l)
##        l = 0
##        c += 1
##if l:
##    mn = min(mn, l)
##    c += 1
##print(mn, c, len(s))


'''
47) (Б.С. Михлин) В текстовом файле k7-m22.txt находится цепочка из прописных
(заглавных) символов латинского алфавита A, B, C, D, E, F. Найдите количество
подцепочек из трех символов, в которых символы идут в обратном алфавитном
порядке и индекс первой буквы последней найденной подцепочки
(первый символ исходной цепочки имеет индекс 0).
Например, у цепочки FDCBA таких подцепочек три: FDC, DCB и CBA, а
индекс первой буквы последней найденной подцепочки (CBA) два и,
следовательно, ответ: 3 2.
'''
##with open('data/k7-m22.txt') as f: #47
##    s = f.readline()
##c = 0
##alphabet = ['A', 'B', 'C', 'D', 'E', 'F']
##index = 0
##for i in range(len(s)-2):
##    if alphabet.index(s[i]) > alphabet.index(s[i+1]) > alphabet.index(s[i+2]):
##        c += 1
##        index = i
##print(c, index)


'''
125)(К. Амеличев) Текстовый файл 24-5.txt содержит последовательность из
символов «(»и «)», всего не более 106 символов. Определить количество пар
скобок «()» в этом файле.
'''
##with open('data/24-5.txt') as f: #125
##    s = f.readline()
##print(s.count('()'))


'''
134) (Е. Джобс) Текстовый файл 24-J3.txt состоит не более чем из 106 символов
I, K, O, T. Сколько раз встречаются комбинации «TIK» и «TOK». 
'''
##with open('data/24-J3.txt') as f: #134
##    s = f.readline()
##print(s.count('TIK') + s.count('TOK'))


'''
137) Текстовый файл 24-s1.txt состоит не более чем из 106 заглавных латинских
букв (A..Z). Текст разбит на строки различной длины. Определите количество
строк, в которых буква J встречается чаще, чем буква E.
'''
##with open('data/24-s1.txt') as f: #137
##    s = f.readlines()
##c = 0
##for i in s:
##    if i.count('J') > i.count('E'):
##        c += 1
##print(c)


'''
141) Текстовый файл 24-s1.txt состоит не более чем из 106 заглавных латинских
букв (A..Z). Текст разбит на строки различной длины. Определите количество
строк, в которых встречается комбинация F*O, где звёздочка обозначает любой
символ.
'''
##with open('data/24-s1.txt') as f: #141
##    s = f.readlines()
##c = 0
##for i in s:
##    flag = False
##    for j in range(len(i)-2):
##        if i[j] == 'F' and i[j+2] == 'O':
##            c += 1
##            break
##print(c)


'''
151) (Е. Джобс) Текстовый файл 24-j9.txt состоит не более чем из 106 символов
английского алфавита. Определите количество палиндромов (последовательностей,
которые читаются в обе стороны одинаково) длиной 5 символов.
'''
##with open('data/24-j9.txt') as f: #151
##    s = f.readline()
##c = 0
##for i in range(len(s)-4):
##    if (s[i] == s[i+4] and s[i+1] == s[i+3]):
##        c += 1
##print(c)


'''
158) Текстовый файл 24-157.txt содержит только заглавные буквы латинского
алфавита (ABC…Z). Определите символ, который чаще всего встречается в файле
перед двумя одинаковыми символами. Например, в тексте CCBAABABBCCC есть
комбинации BAA, ABB, BCC и CCC. Чаще всего – 2 раза – перед двумя одинаковыми
символами стоит B, в ответе для этого случая надо написать B2 (без пробелов и
других разделителей). Если таких символов несколько, выведите тот, который
стоит раньше в алфавите.
'''
##with open('data/24-157.txt') as f: #158
##    s = f.readline()
##lt = {}
##for i in range(len(s)-2):
##    if s[i+1] == s[i+2]:
##        if s[i] in lt:
##            lt[s[i]] += 1
##        else:
##            lt[s[i]] = 1
##m = max(lt.values())
##for i in lt:
##    if lt[i] == m:
##        print(i, m)


'''
169)Текстовый файл 24-169.txt состоит не более чем из 106 заглавных символов
X, Y и Z. Определите максимальную длину цепочки символов, состоящей из
повторяющихся фрагментов XYZ. Цепочка должна начинаться с символа X и
заканчиваться символом Z. Например, для строки ZZZXYZXYZXZZZ длина цепочки
равна 6: --XYZ+XYZ--.
'''
### TODO: Ответ – 66 
##with open('data/24-169.txt') as f: #169
##    s = f.readline()
##res = re.findall('r((XYZ)+)', s)
##print(len(max(res, key=lambda x: len(x[0]))[0]))


'''
186)(Л. Шастин) Текстовый файл 24-186.txt содержит заглавные латинские буквы и
телефонные номера, всего не более чем из 106 символов. Телефонный номер – это
последовательность цифр, расположенных между буквами. В некоторой стране Z
номер телефона состоит из 11 цифр,  начинается на 7 и при этом сумма последних
двух цифр номера равна сумме первых двух цифр. Определите количество телефонных
номеров страны Z, содержащихся в файле.
'''
### TODO: Ответ – 89
##with open('data/24-186.txt') as f: #186
##    s = f.readline()
##res = re.findall(r'7\d{10}', s)
##print(len([i for i in res if sum(map(int, i[:2])) == sum(map(int, i[-2:]))]))

