from itertools import product, permutations
from time import time

start = time()
def timecomplite() -> None:
    print('\nThe program was completed in {} second!'.format(time() - start))
    return None


def to_base(n: int, b: int) -> str:
    alpha = '0123456789abcdefghijklmnopqrstuvwxyz'
    r = alpha[n % b]
    while n >= b:
        n //= b
        r += alpha[n % b]
    return r[::-1]


'''
2. Логическая функция F задаётся выражением (x ≡ ¬y) → ((x ∧ w) ≡ z).
На рисунке приведён частично заполненный фрагмент
таблицы истинности функции F, содержащий неповторяющиеся строки. Определите,
какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z, w.
'''
##print('y z x w f')
##for y, z, x, w in product([0, 1], repeat=4):
##    f = int(not (x == (not y)) or ((x and w) == z))
##    if not f:
##        print(y, z, x, w, f)
##timecomplite()


'''
5. (ЕГЭ-2022) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое
число R следующим образом.
1) Строится двоичная запись числа N.
2) К этой записи дописываются ещё несколько разрядов по следующему правилу:
а) если сумма цифр в двоичной записи числа чётная, то к этой записи справа дописывается 0, а
затем два левых разряда заменяются на 10;
б) если сумма цифр в двоичной записи числа нечётная, то к этой записи справа дописывается 1, а
затем два левых разряда заменяются на 11.
3) Результат переводится в десятичную систему и выводится на экран.
Например, для исходного числа 6 = 1102 результатом является число 10002 = 8, а для исходного числа
4 = 1002 результатом является число 11012 = 13.
Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается
число R, меньшее, чем 35.
'''
##res = []
##for n in range(1, 1000):
##    r = bin(n)[2::]
##    if not(sum(map(int, r)) % 2):
##        r = '10' + r[2::] + '0'
##    else:
##        r = '11' + r[2::] + '1'
##    if int(r, 2) < 35:
##        res.append(n)
##print(res[-1])
##timecomplite()


'''
6. Определите, сколько существует различных значений переменной x, при вводе которых программа
выведет число 515.
'''
##c = 0
##for i in range(453000000 + 2000, 453000000 + 3000):
##    x = i
##    n = 1056
##    while (x+n)//1000 < 453261:
##        x = x - 4
##        n = n + 8
##    if n//1000 == 515:
##        print('res', i)
##        c += 1
##print(c)
##timecomplite()


'''
8. Маша составляет 7-буквенные коды из букв П, Е, С, К, А, Р, Ь. Каждую букву нужно использовать
ровно 1 раз, при этом буква Ь не может стоять на первом месте, а также перед буквами Е, А и Р.
Сколько различных кодов может составить Маша?
'''
##c = 0
##for s in permutations('ПЕСКАРЬ'):
##    s = ''.join(s)
##    if s[0] == 'Ь' or 'ЬЕ' in s or 'ЬА' in s or 'ЬР' in s:
##        continue
##    c += 1
##print(c)
##timecomplite()


'''
12. Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может
выполнять две команды, в обеих командах v и w обозначают цепочки цифр.
1. заменить (v, w)
2. нашлось (v)
Первая команда заменяет в строке первое слева вхождение цепочки v на цепочку w, вторая проверяет,
встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда
возвращает логическое значение «истина», в противном случае возвращает значение «ложь».
Какая строка получится в результате применения приведённой ниже программы к строке, состоящей
из 68 идущих подряд цифр 8? В ответе запишите полученную строку.
НАЧАЛО
ПОКА нашлось (222) ИЛИ нашлось (888)
ЕСЛИ нашлось (222)
ТО заменить (222, 8)
ИНАЧЕ заменить (888, 2)
КОНЕЦ ЕСЛИ
КОНЕЦ ПОКА
КОНЕЦ
'''
##s = 68 * '8'
##while '222' in s or '888' in s:
##    if '222' in s:
##        s = s.replace('222', '8', 1)
##    else:
##        s = s.replace('888', '2', 1)
##print(s)
##timecomplite()
    

'''
14. Значение арифметического выражения: 920 + 360 – 125 записали в системе счисления с
основанием 3. Сколько цифр «2» содержится в этой записи?
'''
##print(to_base(9**20 + 3**60 - 125, 3).count('2'))
##timecomplite()


'''
15. Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без остатка на
натуральное число m». Для какого наименьшего натурального числа А формула
(ДЕЛ(x, 250) → ¬ДЕЛ(x, 10)) ∨ (3x + 2A ≥ 1000)
тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной
х)?
'''
##for a in range(1, 1000):
##    f = True
##    for x in range(1, 1000):
##        if not ((x % 250 or x % 10) or (3*x + 2*a >= 1000)):
##            f = False
##            break
##    if f:
##        print(a)
##        break
##timecomplite()


'''
16. (А. Богданов) Алгоритм вычисления значения функции F(n), где n – целое неотрицательное число,
задан следующими соотношениями:
F(n) = 0 при n ≤ 2 или n = 8
F(n) = 1 при n = 3
F(n) = F(n–2) + F(n–1) при n > 3 и n ≠ 8
Для какого значения n значение F(n) будет равно 25?
'''
##def f(n):
##    if n <= 2 or n == 8:
##        return 0
##    if n == 3:
##        return 1
##    return f(n-2) + f(n-1)
##
##for n in range(1, 100):
##    if f(n) == 25:
##        print(n)
##        break
##timecomplite()


'''
17. (И. Женецкий) В файле 17-1.txt содержится последовательность целых чисел. Элементы
последовательности – целые числа в диапазоне от –10 000 до 10 000. Рассматривается множество пар
элементов последовательности, в которых оба числа нечётны и среднее арифметическое чисел пары
не меньше, чем минимальное положительное число в последовательности, кратное 15. Найдите
количество таких пар чисел и минимальное среднее арифметическое пары, удовлетворяющей
условию. В данной задаче под парой подразумевается два идущих подряд элемента
последовательности.
'''
with open('data/17-1.txt') as f:
    data = list(map(int, f.readlines()))
m15 = min([i for i in data if i > 0 and not(i % 15)])
c = 0
mavg = 10000
for i in range(len(data) - 1):
    avg = (data[i] + data[i+1]) / 2
    if data[i] % 2 and data[i+1] % 2 and avg >= m15:
        c += 1
        mavg = min(mavg, avg)
print(c, mavg)
timecomplite()
