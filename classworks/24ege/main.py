'''
1) В текстовом файле  k7-0.txt находится цепочка из символов латинского
алфавита A, B, C. Найдите длину самой длинной подцепочки, состоящей из
символов C.
'''
##with open('data/k7-0.txt') as f: #1 
##    s = f.readline()
##
##c = 0 # (вариант 1)
##mx = 0
##for x in s:
##    if x == 'C':
##        c += 1
##    else:
##        c = 0
##    mx = max(mx, c)
##print(mx)
##
##s1 = 'C' # (вариант 2)
##mx = 0
##while s1 in s:
##    mx = max(mx, len(s1))
##    s1 += 'C'
##print(mx)


'''
21) (А.М. Кабанов) В текстовом файле k7a-1.txt находится цепочка из символов
латинского алфавита A, B, C, D, E. Найдите длину самой длинной подцепочки,
состоящей из символов A, B или C (в произвольном порядке).
'''
##with open('data/k7a-1.txt') as f: #21
##    s = f.readline()
##c = 0
##mx = 0
##for x in s:
##    if x not in 'DE':
##        c += 1
##    else:
##        c = 0
##    mx = max(mx, c)
##print(mx)


'''
27) (А.М. Кабанов) В текстовом файле k7b-1.txt находится цепочка из символов
латинского алфавита A, B, C, D, E. Найдите максимальную длину цепочки вида
EABEABEABE... (состоящей из фрагментов EAB, последний фрагмент может быть неполным).
'''
##with open('data/k7b-1.txt') as f: #21
##    s = f.readline()
##s1 = 'EAB'
##while s1 in s:
##    s1 += 'EAB'
##s1 = s1[:-3]
##if s1 + 'E' in s:
##    s1 += 'E'
##if s1 + 'EA' in s:
##    s1 += 'A'
##print(len(s1))


'''
33) (А.М. Кабанов) В текстовом файле k7c-1.txt находится цепочка из символов
латинского алфавита A, B, C, D, E. Найдите количество цепочек длины 3,
удовлетворяющих следующим условиям: 
• 1-й символ – один из символов B, C или D;
• 2-й символ – один из символов B, D, E, который не совпадает с первым; 
• 3-й символ – один из символов B, C, E, который не совпадает со вторым.
'''
##with open('data/k7c-1.txt') as f: #33
##    s = f.readline()
##c = 0
##for i in range(len(s)-2):
##    if s[i] in 'BCD' and s[i+1] in 'BDE' and s[i] != s[i+1] and \
##       s[i+2] in 'BCE' and s[i+1] != s[i+2]:
##        c += 1
##print(c)


'''
38) (А.М. Кабанов) В текстовом файле k7c-6.txt находится цепочка из символов
латинского алфавита A, B, C, D, E, F. Найдите количество цепочек длины 3, в
которых символы не совпадают.
'''
##with open('data/k7c-6.txt') as f: #38
##    s = f.readline()
##c = 0
##for i in range(len(s)-2):
##    if len(set(s[i:i+3])) == 3:
##        c += 1
##print(c)


'''
39) (Б.С. Михлин) В текстовом файле  k7-m1.txt находится цепочка из прописных
(заглавных) символов латинского алфавита A, B, C. Найдите длину самой короткой
подцепочки, состоящей из символов C (C-подцепочки). В ответе через пробел
укажите: длину найденной подцепочки (если C-подцепочек нет, то 0),
количество C-подцепочек и длину исходной цепочки.
'''
##with open('data/k7-m1.txt') as f: #39
##    s = f.readline()
##c = 0
##l = 0
##mn = 10**6
##for i in s:
##    if i == 'C':
##        l += 1
##    elif l > 0:
##        mn = min(mn, l)
##        l = 0
##        c += 1
##if l:
##    mn = min(mn, l)
##    c += 1
##print(mn, c, len(s))


'''
47) (Б.С. Михлин) В текстовом файле k7-m22.txt находится цепочка из прописных
(заглавных) символов латинского алфавита A, B, C, D, E, F. Найдите количество
подцепочек из трех символов, в которых символы идут в обратном алфавитном
порядке и индекс первой буквы последней найденной подцепочки
(первый символ исходной цепочки имеет индекс 0).
Например, у цепочки FDCBA таких подцепочек три: FDC, DCB и CBA, а
индекс первой буквы последней найденной подцепочки (CBA) два и,
следовательно, ответ: 3 2.
'''
with open('data/k7-m22.txt') as f: #47
    s = f.readline()
c = 0
alphabet = ['A', 'B', 'C', 'D', 'E', 'F']
index = 0
for i in range(len(s)-2):
    if alphabet.index(s[i]) > alphabet.index(s[i+1]) > alphabet.index(s[i+2]):
        c += 1
        index = i
print(c, index)
