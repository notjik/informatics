from itertools import product

'''
206) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 109, найдите все числа,
соответствующие маске 1?34567?9 и делящиеся на 17 без остатка. В ответе
запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце — соответствующие им частные от деления на 17.
'''
##a = [] # Список подходящих значений
##for x1 in range(10): # Поиск первого вопроса
##    for x2 in range(10): # Поиск второго вопроса
##        x = int('1' + str(x1) + '34567' + str(x2) + '9') # Создание полной строки и перевод в int для проверки условия
##        if not(x % 17): # Проверка по условию
##            a.append(x) # Добавляем в список верных значений
##a.sort() # Сортировка подходящий значений
##for i in a: # Проходимся по значениям
##    print(i, i // 17) # Вывод ответа


'''
207) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 109, найдите все числа,
соответствующие маске 123*567? и делящиеся на 169 без остатка. В ответе
запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце — соответствующие им частные от деления на 169.
'''
##a = []
##l = [''] # Создание всех возможных доп символов в список
##for i in range(2): 
##    l += [''.join(j) for j in product('0123456789', repeat=i+1)] # Добавление новых возможных элементов
##for x1 in range(10):
##    for x2 in l:
##        x = int('123' + x2 + '567' + str(x1))
##        if not(x % 169):
##            a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 169)


'''
208) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 106, найдите все числа,
соответствующие маске 12*45* и делящиеся на число 51 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке
возрастания, а во втором столбце — соответствующие им частные от деления на 51.
'''
##a = []
##l = [''] 
##for i in range(2): 
##    l += [''.join(j) for j in product('0123456789', repeat=i+1)]
##for x1 in l:
##    for x2 in l:
##        x = int('12' + x1 + '45' + x2)
##        if not(x % 51) and x < 10**6:
##            a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 51)


'''
211) (Б. Михлин) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все натуральные числа, делящиеся нацело на 7916,
шестнадцатеричный код которых соответствует маске 1?DED?CED.
В ответе запишите найденные числа в десятичной системе счисления в порядке
убывания, а справа от каждого числа – соответствующее частное
от деления на 7916.
'''
##a = []
##for x1 in range(16):
##    for x2 in range(16):
##        x = int('1' + hex(x1)[2::] + 'DED' + hex(x2)[2::] + 'CED', 16)
##        if not(x % int('79', 16)):
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i, i // int('79', 16))


'''
212) (Б. Михлин) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все натуральные числа, делящиеся нацело на BA16, шестнадцатеричный код
которых соответствует маске 1?DED?BABA. В ответе запишите найденные числа
в десятичной системе счисления в порядке убывания, а справа от каждого числа –
соответствующее частное от деления на BA16.
'''
##a = []
##for x1 in range(16):
##    for x2 in range(16):
##        x = int('1' + hex(x1)[2::] + 'DED' + hex(x2)[2::] + 'BABA', 16)
##        if not(x % int('BA', 16)):
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i, i // int('BA', 16))


'''
213) (Б. Михлин) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все натуральные числа, делящиеся нацело на 1148, восьмеричный код
которых соответствует маске 1?345?700. В ответе запишите найденные числа
в десятичной системе счисления в порядке убывания, а справа от каждого числа –
соответствующее частное от деления на 1148.
'''
a = []
for x1 in range(8):
    for x2 in range(8):
        x = int('1' + oct(x1)[2::] + '345' + oct(x2)[2::] + '700', 8)
        if not(x % int('114', 8)):
            a.append(x)
a.sort(reverse=True)
for i in a:
    print(i, i // int('114', 8))
