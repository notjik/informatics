from itertools import product
from functools import reduce

def dels(x):
    a = []
    i = 1
    while i**2 <= x:
        if i**2 == x:
            a.append(i)
        elif x % i == 0:
            a += [i, x // i]
        i += 1
    a.sort()
    return a


def prime(x):
    if x < 2:
        return False
    i = 2
    while i**2 < x:
        if x % i == 0:
            return False
        i += 1
    return True


'''
20)	Напишите программу, которая ищет среди целых чисел, принадлежащих
числовому отрезку [100806; 100950], числа, имеющие ровно 6 различных делителей.
Выведите эти делители для каждого найденного числа в порядке возрастания.
'''
##for i in range(100806, 100951):
##    a = dels(i)
##    if len(a) == 6:
##        print(*a)


'''
42) Напишите программу, которая ищет среди целых чисел, принадлежащих
числовому отрезку [4202865; 4202923], простые числа. Выведите все найденные
простые числа в порядке возрастания, слева от каждого числа выведите его номер
по порядку.
'''
##c = 0
##for i in range(4202865, 4202924):
##    if prime(i):
##        c += 1
##        print(c, i)


'''
70) (Д.Ф. Муфаззалов, г. Уфа) Совершенным называется число, натуральное число,
равное сумме всех своих собственных делителей (то есть всех положительных
делителей, отличных от самого́ числа) (например, число 6=1+2+3). ) Выведите
каждое совершенное число из диапазона [2; 10000] и количество его собственных
делителей в порядке возрастания. Вывод каждого совершенного числа начинайте с
новой строки. Числа в строке разделяйте пробелом.
'''
##res = {}
##for i in range(2, 10001):
##    dl = dels(i)[:-1]
##    if i == sum(dl):
##        res[len(dl)] = i
##for key in sorted(res.keys()):
##    print(res[key], key)


'''
84) (С.А. Скопинцева) Cреди целых чисел, принадлежащих числовому отрезку
[87921; 88187], найдите числа, сумма цифр которых кратна 14, а произведение
цифр кратно 18 и не равно 0. Для каждого найденного числа запишите сумму и
произведение его цифр в таблицу на экране с новой строки в порядке возрастания
произведения цифр.
'''
res = {}
for i in range(87921, 88188):
    sm = sum(map(int, str(i)))
    pr = reduce(lambda a, b: a*b, map(int,  str(i)))
    if not(sm % 14) and not(pr % 18) and pr != 0:
        res[pr] = sm
for key in sorted(res.keys()):
    print(res[key], key)


'''
206) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 109, найдите все числа,
соответствующие маске 1?34567?9 и делящиеся на 17 без остатка. В ответе
запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце — соответствующие им частные от деления на 17.
'''
##a = [] # Список подходящих значений
##for x1 in range(10): # Поиск первого вопроса
##    for x2 in range(10): # Поиск второго вопроса
##        x = int('1' + str(x1) + '34567' + str(x2) + '9') # Создание полной строки и перевод в int для проверки условия
##        if not(x % 17): # Проверка по условию
##            a.append(x) # Добавляем в список верных значений
##a.sort() # Сортировка подходящий значений
##for i in a: # Проходимся по значениям
##    print(i, i // 17) # Вывод ответа


'''
207) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 109, найдите все числа,
соответствующие маске 123*567? и делящиеся на 169 без остатка. В ответе
запишите в первом столбце таблицы все найденные числа в порядке возрастания,
а во втором столбце — соответствующие им частные от деления на 169.
'''
##a = []
##l = [''] # Создание всех возможных доп символов в список
##for i in range(2): 
##    l += [''.join(j) for j in product('0123456789', repeat=i+1)] # Добавление новых возможных элементов
##for x1 in range(10):
##    for x2 in l:
##        x = int('123' + x2 + '567' + str(x1))
##        if not(x % 169):
##            a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 169)


'''
208) (А. Кабанов) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, не превышающих 106, найдите все числа,
соответствующие маске 12*45* и делящиеся на число 51 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке
возрастания, а во втором столбце — соответствующие им частные от деления на 51.
'''
##a = []
##l = [''] 
##for i in range(2): 
##    l += [''.join(j) for j in product('0123456789', repeat=i+1)]
##for x1 in l:
##    for x2 in l:
##        x = int('12' + x1 + '45' + x2)
##        if not(x % 51) and x < 10**6:
##            a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 51)


'''
211) (Б. Михлин) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все натуральные числа, делящиеся нацело на 7916,
шестнадцатеричный код которых соответствует маске 1?DED?CED.
В ответе запишите найденные числа в десятичной системе счисления в порядке
убывания, а справа от каждого числа – соответствующее частное
от деления на 7916.
'''
##a = []
##for x1 in range(16):
##    for x2 in range(16):
##        x = int('1' + hex(x1)[2::] + 'DED' + hex(x2)[2::] + 'CED', 16)
##        if not(x % int('79', 16)):
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i, i // int('79', 16))


'''
212) (Б. Михлин) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все натуральные числа, делящиеся нацело на BA16, шестнадцатеричный код
которых соответствует маске 1?DED?BABA. В ответе запишите найденные числа
в десятичной системе счисления в порядке убывания, а справа от каждого числа –
соответствующее частное от деления на BA16.
'''
##a = []
##for x1 in range(16):
##    for x2 in range(16):
##        x = int('1' + hex(x1)[2::] + 'DED' + hex(x2)[2::] + 'BABA', 16)
##        if not(x % int('BA', 16)):
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i, i // int('BA', 16))


'''
213) (Б. Михлин) Назовём маской числа последовательность цифр, в которой
также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все натуральные числа, делящиеся нацело на 1148, восьмеричный код
которых соответствует маске 1?345?700. В ответе запишите найденные числа
в десятичной системе счисления в порядке убывания, а справа от каждого числа –
соответствующее частное от деления на 1148.
'''
##a = []
##for x1 in range(8):
##    for x2 in range(8):
##        x = int('1' + oct(x1)[2::] + '345' + oct(x2)[2::] + '700', 8)
##        if not(x % int('114', 8)):
##            a.append(x)
##a.sort(reverse=True)
##for i in a:
##    print(i, i // int('114', 8))


'''
257) (К. Багдасарян) Назовём маской числа последовательность цифр,
в которой также могут встречаться следующие символы:
- символ «Ч» означает ровно одну произвольную четную цифру;
- символ «Н» означает ровно одну произвольную нечетную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске *ЧН2 соответствуют числа 7232, 612, 444692 и т.д.
Среди натуральных чисел, не превышающих 108, найдите все числа, соответствующие
маске 123*НЧ56, делящиеся на 206 без остатка. В ответе запишите в первом
столбце таблицы все найденные числа в порядке возрастания, а во втором столбце
– соответствующие им результаты деления этих чисел на 206.
'''
##a = []
##l = [''] + list('1234567890')
##ch = list('02468')
##nch = list('13579')
##for x1 in l:
##    for x2 in nch:
##        for x3 in ch:
##            x = int('123'+ x1 + x2 + x3 + '56')
##            if not(x % 206):
##                a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 206)


'''
258) (К. Багдасарян) Назовём маской числа последовательность цифр,
в которой также могут встречаться следующие символы:
- символ «Ч» означает ровно одну произвольную четную цифру;
- символ «Н» означает ровно одну произвольную нечетную цифру.
Например, маске ЧН2 соответствуют числа 232, 612, 692 и т.д. Среди натуральных
чисел, не превышающих 107, найдите все числа, соответствующие маске 1ЧНЧНЧН,
делящиеся на 4023 без остатка. В ответе запишите в первом столбце таблицы все
найденные числа в порядке возрастания, а во втором столбце – соответствующие
им результаты деления этих чисел на 4023.
'''
##a = []
##ch = list('02468')
##nch = list('13579')
##for x1 in ch:
##    for x2 in nch:
##        for x3 in ch:
##            for x4 in nch:
##                for x5 in ch:
##                    for x6 in nch:
##                        x = int('1' + x1 + x2 + x3 + x4 + x5 + x6)
##                        if not(x % 4023):
##                            a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 4023)


'''
259)(К. Багдасарян) Назовём маской числа последовательность цифр,
в которой также могут встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «Ч» означает ровно одну произвольную четную цифру;
- символ «Н» означает ровно одну произвольную нечетную цифру.
Например, маске Ч?Н2 соответствуют числа 2912, 6012, 6772 и т.д.
Среди натуральных чисел, не превышающих 108, найдите все числа, соответствующие
маске 11Ч??Н11, делящиеся на 2023 без остатка. В ответе запишите в первом
столбце таблицы все найденные числа в порядке возрастания, а во втором столбце
– соответствующие им результаты деления этих чисел на 2023.
'''
##a = []
##l = '123456789'
##ch = '02468'
##nch = '13579'
##for x1 in ch:
##    for x2 in nch:
##        for x3 in l:
##            for x4 in l:
##                x = int('11' + x1 + x3 + x4 + x2 + '11')
##                if not(x % 2023):
##                    a.append(x)
##a.sort()
##for i in a:
##    print(i, i // 2023)
