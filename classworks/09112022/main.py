from itertools import permutations, product


def toBASE(num: int, base: int) -> str:
    alpha = '0123456789abcdefghijklmnopqrstuvwxyz'
    res = alpha[num % base]
    while num >= base:
        num = num // base
        res += alpha[num % base]
    return res[::-1]


'''
1. Алгоритм получает на вход натуральное число N > 1 и строит по нему новое
число R следующим образом:
1) Строится двоичная запись числа N.
2) Подсчитывается количество нулей и единиц в полученной записи. Если их
количество одинаково, в конец записи добавляется её последняя цифра.
В противном случае в конец записи добавляется цифра, которая встречается реже.
3) Шаг 2 повторяется ещё два раза.
4) Результат переводится в десятичную систему счисления.
При каком наименьшем исходном числе N > 90 в результате работы алгоритма
получится чётное число, которое не делится на 4?
'''
##for i in range(90, 300):
##    n = bin(i)[2::]
##    for j in range(3):
##        z = n.count('0')
##        o = n.count('1')
##        if z == o:
##            n += n[-1]
##        elif z < o:
##            n += '0'
##        else:
##            n += '1'
##    it = int(n, 2)
##    if not(it % 2) and it % 4:
##        print(i, it, n)
##        break


'''
2. На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему
новое число R следующим образом.
1. Строится двоичная запись числа N.
2. К этой записи дописываются справа ещё два разряда по следующему правилу:
а) складываются все цифры двоичной записи, и остаток от деления суммы на 2
дописывается в конец числа (справа). Например, запись 11100 преобразуется
в запись 111001;
б) над этой записью производятся те же действия – справа дописывается остаток
от деления суммы цифр на 2.
Полученная таким образом запись (в ней на два разряда больше, чем в записи
исходного числа N) является двоичной записью искомого числа R. Какое наибольшее
число, меньшее 50, может быть получено в результате работы автомата?
'''
##for n in range(1, 100):
##    r = bin(n)[2::]
##    summ = sum(map(int, r))
##    r += str(summ % 2)
##    summ = sum(map(int, r))
##    r += str(summ % 2)
##    it = int(r, 2)
##    if it >= 50:
##        break
##    print(it)
    

'''
3. Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1) Строится двоичная запись числа N.
2) В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3) В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4) Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом.
1) Двоичная запись числа N: 11 = 10112
2) Вторая справа цифра 1, новая запись 101112.
3) Вторая слева цифра 0, новая запись 1011102.
4) Десятичное значение полученного числа 46.
Для скольких значений N в результате работы алгоритма получится число,
принадлежащее отрезку [150; 250]?
'''
##c = 0
##for i in range(2, 100):
##    n = bin(i)[2::]
##    n += n[-2]
##    n += n[1]
##    it = int(n, 2)
##    if 150 <= it <= 250:
##        c += 1
##print(c)


'''
7. (А. Куканова) Настя составляет 6-буквенные слова из букв Т, Ь, Ю, Р, И, Н, Г,
причём мягкий знак не может стоять в начале слова и после гласной. Все буквы
слова различны. Сколько таких слов может составить Настя?
'''
##c = 0
##for s in permutations('ТЬЮРИНГ', r=6):
##    s = ''.join(s)
##    if s[0] != 'Ь' and 'ЮЬ' not in s and 'ИЬ' not in s:
##        c += 1
##print(c)


'''
8. Сколько существует чисел, делящихся на 5, десятичная запись которых содержит
6 цифр, причём все цифры различны и никакие две чётные и две нечётные цифры не
стоят рядом.
'''
##c = 0
##for n in permutations('0123456789', r=6):
##    n = ''.join(n)
##    if n[0] != 0 and not(int(n) % 5):
##        flag = True
##        for i in range(len(n)-1):
##            if int(n[i]) % 2 and int(n[i+1]) % 2 or \
##                   not(int(n[i]) % 2) and not(int(n[i+1]) % 2):
##                flag = False
##                break
##        if flag:
##            c += 1
##print(c)


'''
9. (А.Н. Носкин) Петя составляет шестибуквенные слова перестановкой букв слова
ЧИУАУА. Сколько всего различных слов может составить Петя?
'''
##c = 0
##for s in set(permutations('ЧИУАУА')):
##    c += 1
##print(c)


'''
13. (С.С. Поляков) Исполнитель Редактор получает на вход строку цифр и
преобразовывает её. Редактор может выполнять две команды,
в обеих командах v и w обозначают цепочки цифр.
1. заменить (v, w)
2. нашлось (v)
Первая команда заменяет в строке первое слева вхождение цепочки v
на цепочку w. Если цепочки v в строке нет, эта команда не изменяет строку.
Вторая команда проверяет, встречается ли цепочка v в строке
исполнителя Редактор. Если она встречается, то команда возвращает логическое
значение «истина», в противном случае возвращает значение «ложь».
Дана программа для исполнителя Редактор:
НАЧАЛО
  ПОКА нашлось (111) ИЛИ нашлось (222)
    заменить (111, 2)
    заменить (222, 1)
  КОНЕЦ ПОКА
КОНЕЦ
Какая строка получится в результате применения приведённой программы к строке
вида 1…12…2 (2018 единиц и 2019 двоек)?
'''
##s = '1' * 2018 + '2' * 2019
##while '111' in s or '222' in s:
##    s = s.replace('111', '2', 1)
##    s = s.replace('222', '1', 1)
##print(s)


'''
14. Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
Редактор может выполнять две команды, в обеих командах v и w обозначают
цепочки цифр.
1. заменить (v, w)
2. нашлось (v)
Первая команда заменяет в строке первое слева вхождение цепочки v
на цепочку w, вторая проверяет, встречается ли цепочка v в строке
исполнителя Редактор. Если она встречается, то команда возвращает логическое
значение «истина», в противном случае возвращает значение «ложь».
Дана программа для исполнителя Редактор:
НАЧАЛО
  ПОКА нашлось (111)
    заменить (111, 2)
    заменить (22, 1)
  КОНЕЦ ПОКА
КОНЕЦ
Какая строка получится в результате применения приведённой выше программы
к строке вида 1…12…2, состоящей из 44 единиц и 21 двойки?
В ответе запишите полученную строку.
'''
##s = '1' * 44 + '2' * 21
##while '111' in s:
##    s = s.replace('111', '2', 1)
##    s = s.replace('22', '1', 1)
##print(s)


'''
15. Исполнитель Редактор получает на вход строку цифр и преобразовывает её.
Редактор может выполнять две команды, в обеих командах v и w обозначают
цепочки символов.
1. заменить (v, w) 
2. нашлось (v)
Первая команда заменяет в строке первое слева вхождение цепочки v
на цепочку w. Если цепочки v в строке нет, эта команда не изменяет строку.
Вторая команда проверяет, встречается ли цепочка v в строке
исполнителя Редактор.
Дана программа для исполнителя Редактор:
НАЧАЛО
ПОКА нашлось (2222) ИЛИ нашлось (666)
  ЕСЛИ нашлось (2222)
    ТО заменить (2222, 6)
    ИНАЧЕ заменить (666, 2)
  КОНЕЦ ЕСЛИ
КОНЕЦ ПОКА
КОНЕЦ
Какая строка получится в результате применения приведённой выше программы
к строке, состоящей из 166 идущих подряд цифр 2? В ответе запишите полученную
строку.
'''
##s = '2'*166
##while '2222' in s or '666' in s:
##    if '2222' in s:
##        s = s.replace('2222', '6', 1)
##    else:
##        s = s.replace('666', '2', 1)
##print(s)


'''
19. (В. Шелудько) Значение выражения 7103 + 20∙7204 – 3∙757 + 97 записали
в системе счисления с основанием 7. Сколько цифр 6 содержится в этой записи?
'''
##print(toBASE(7**103 + 20*7**204 - 3*7**57 + 97, 7).count('6'))


'''
20. Сколько единиц в двоичной записи числа 8502 – 4211 + 21536 – 19?
'''
##print(bin(8**502 - 4**211 + 2**1536 - 19)[2::].count('1'))


'''
21. Сколько единиц в двоичной записи числа 81014 – 2530 – 12?
'''
print(bin(8**1014 - 2**530 - 12)[2::].count('1'))
