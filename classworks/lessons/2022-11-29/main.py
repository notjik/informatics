from itertools import product, permutations

def tobase(n: int, b: int) -> str:
    alpha = '0123456789abcdefghijklmnopqrstuvwxyz'
    r = alpha[n%b]
    while n >= b:
        n //= b
        r += alpha[n%b]
    return r[::-1]

'''
2. Логическая функция F задаётся выражением (a ∧ b) ∨ (c ∧ (¬a ∨ b)).
Определите, какому столбцу
таблицы истинности функции F соответствует каждая из переменных a, b, c.
В ответе напишите буквы a, b, c в том порядке, в котором идут
соответствующие им столбцы (без разделителей).
'''
##print('b c a f')
##for b, c, a in product([0, 1], repeat=3):
##    f = int((a and b) or (c and (not a or b)))
##    print(b, c, a, f)


'''
5. Автомат получает на вход трёхзначное число. По этому числу строится новое
число по следующим правилам.
1. Перемножаются первая и вторая, а также вторая и третья цифры.
2. Полученные два числа записываются друг за другом в порядке неубывания без
разделителей. Пример. Исходное число: 631. Произведение: 6*3 = 18; 3*1 = 3.
Результат: 318. Укажите наибольшее число, при обработке которого автомат
выдаёт результат 621.
'''
##for n in product([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], repeat=3):
##    if n[0] == 0:
##        continue
##    n1 = sorted([n[0] * n[1], n[1] * n[2]])
##    r = int(''.join(map(str, n1)))
##    if r == 621:
##        print(n, r)
    

'''
6. (Е. Джобс) Сколько существует значений переменной s, при вводе которых
программа выведет число 768?
'''
##c = 0
##for i in range(1000):
##    s = i
##    s = s * 10
##    n = 3
##    while s > 0:
##        s = s - n
##        n = n * 2
##    if n == 768:
##        c += 1
##print(c)


'''
8. Вася составляет 5-буквенные коды из букв M, А, Н, О, К. Каждую букву нужно
использовать ровно 1 раз, при этом код не может начинаться с буквы О и не может
содержать сочетания АО. Сколько различных кодов может составить Вася?
'''
##c = 0
##for s in permutations('МАНОК'):
##    s = ''.join(s)
##    if s[0] != 'О' and 'АО' not in s:
##        c += 1
##print(c)
    

'''
14. Число 188 записали в системах счисления с основаниями от 2 до 10 включительно.
При каких основаниях цифры в записи этого числа расположены в порядке
неубывания? В ответе укажите сумму всех подходящих оснований.
'''
##s = 0
##for b in range(2, 11):
##    r = tobase(188, b)
##    if sorted(r) == list(r):
##        s += b
##print(b)


'''
15. Обозначим через ДЕЛ(n, m) утверждение «натуральное число n делится без
остатка на натуральное число m». Для какого наименьшего натурального числа А
формула (ДЕЛ(x, 34) ∧ ¬ДЕЛ(x, 51)) → (¬ДЕЛ(x, A) ∨ ДЕЛ(x, 51)) тождественно
истинна (то есть принимает значение 1 при любом натуральном значении
переменной х)?
'''
##for a in range(1, 1000):
##    flag = True
##    for x in range(1, 1000):
##        f = int(not(not(x % 34) and x % 51) or (x % a or not(x % 51)))
##        if not f:
##            flag = False
##            break
##    if flag:
##        print(a)
##        break


'''
16. Алгоритм вычисления значения функции F(n), где n – натуральное число,
задан следующими соотношениями:
F(n) = n*n + 2*n + 1, при n > 25
F(n) = 2*F(n+1) + F(n+3), при чётных n ≤ 25
F(n) = F(n+2) + 3*F(n+5), при нечётных n ≤ 25
Определите количество натуральных значений n из отрезка [1; 1000], для которых
значение F(n) не содержит цифру 0.
'''
def f(n):
    if n > 25:
        return n*n + 2*n + 1
    if not(n % 2):
        return 2*f(n+1) + f(n+3)
    return f(n+2) + 3*f(n+5)


c = 0
for i in range(1, 1001):
    if '0' not in str(f(i)):
        c += 1
print(c)
