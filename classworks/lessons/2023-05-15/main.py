from itertools import product, combinations
from math import ceil
from functools import lru_cache, reduce


def to_base(n, b):
    a = [chr(i) for i in range(ord('0'), ord('9') + 1)] + [chr(i) for i in range(ord('a'), ord('z') + 1)]
    r = a[n % b]
    while n >= b:
        n //= b
        r += a[n % b]
    return r[::-1]


def dels(x):
    r = []
    i = 1
    while i ** 2 <= x:
        if i ** 2 == x:
            r.append(i)
        elif not x % i:
            r += [i, x // i]
        i += 1
    return r


"""
1.  На рисунке справа схема дорог Н-ского района изображена в виде графа; в таблице слева содержатся
сведения о протяжѐнности каждой из этих дорог (в километрах).
П1 П2 П3 П4 П5 П6
П1 1 10 51
П2 1 20 12
П3 4
П4 20 4 20
П5 10 12 20 7
П6 51 7
Так как таблицу и схему рисовали независимо друг от друга, то нумерация населѐнных пунктов в
таблице никак не связана с буквенными обозначениями на графе. Определите, какова длина дороги из
пункта Б в пункт В. В ответе запишите целое число  — так, как оно указано в таблице.
"""
### TODO: Ответ — 10


"""
2.  Логическая функция F задаѐтся выражением (x ∨ y) → (y ≡ z).
Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности
функции F.
Определите, какому столбцу таблицы истинности соответствует каждая из переменных x, y, z.
Переменная 1 Переменная 2 Переменная 3 Функция
??? ??? ??? F
0 0 0
0 0
В ответе напишите буквы x, y, z в том порядке, в котором идут соответствующие им столбцы (сначала –
буква, соответствующая первому столбцу; затем – буква, соответствующая второму столбцу, и т. д.).
Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не нужно.
"""
### TODO: Ответ — zxy
##print('z x y f')
##for x, y, z in product((0, 1), repeat=3):
##    f = int(not (x or y) or (y == z))
##    if not f:
##        print(z, x, y, f)


"""
3.  В файле приведѐн фрагмент базы данных «Продукты» о поставках товаров в магазины районов
города. База данных состоит из трѐх таблиц.
Таблица «Движение товаров» содержит записи о поставках товаров в магазины в течение первой
декады июня 2021 г., а также информацию о проданных товарах. Поле Тип операции содержит значение
Поступление или Продажа, а в соответствующее поле Количество упаковок, шт. занесена информация
о том, сколько упаковок товара поступило в магазин или было продано в течение дня. Заголовок
таблицы имеет следующий вид.
ID операции Дата ID магазина Артикул Тип операции Количество упаковок,
шт.
Цена,
руб./шт.
Таблица «Товар» содержит информацию об основных характеристиках каждого товара. Заголовок
таблицы имеет следующий вид.
Артикул Отдел Наименование Ед. изм. Количество
в упаковке
Поставщик
Таблица «Магазин» содержит информацию о местонахождении магазинов. Заголовок таблицы имеет
следующий вид.
ID магазина Район Адрес
На рисунке приведена схема указанной базы данных.Используя информацию из приведѐнной базы данных, определите, сколько рублей потребовалось
магазинам Первомайского района для закупки яиц диетических за период с 1 по 10 июня включительно.
В ответе запишите только число.
"""
### TODO: Ответ — 167300


"""
4.  По каналу связи передаются сообщения, содержащие только восемь букв: А, Б , Г , Е , И , М, Р , Т .
Для передачи и спользуется двоичный код, удовлетворяющий условию Фано. Кодовые слова для
некоторых букв известны:
Буква Кодовое слово
А 0101
Б 1000
Г Е
011
Буква Кодовое слово
И 00
М 0100
Р 11
Т 1001
Укажите кратчайшее кодовое слово для буквы Г. Если таких кодов несколько, укажите код с
наименьшим числовым значением.
Примечание. Условие Фано означает, что ни одно кодовое слово не является началом другого кодового
слова.
"""
### TODO: Ответ — 101


"""
5.  Автомат обрабатывает натуральное число N (0 ≤ N ≤ 255) по следующему алгоритму:
1.  Строится восьмибитная двоичная запись числа N.
2.  Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
3.  Полученное число переводится в десятичную запись.
4.  Из нового числа вычитается исходное, полученная разность выводится на экран.
Пример. Дано число N = 13. Алгоритм работает следующим образом.
1.  Восьмибитная двоичная запись числа N: 00001101.
2.  Все цифры заменяются на противоположные, новая запись 11110010.
3.  Десятичное значение полученного числа 242.
4.  На экран выводится число 242 − 13 = 229.
Какое число нужно ввести в автомат, чтобы в результате получилось 111?
"""
### TODO: Ответ — 72
##for n in range(256):
##    r = bin(n)[2:]
##    r = '0' * (8-len(r)) + r
##    r = r.replace('0', 'x').replace('1', '0').replace('x', '1')
##    r = int(r, 2)
##    r -= n
##    if r == 111:
##        print(n)


"""
6.  Исполнитель Черепаха действует на плоскости с декартовой системой координат. В начальный
момент Черепаха находится в начале координат, еѐ голова направлена вдоль положительного
направления оси ординат, хвост опущен. При опущенном хвосте Черепаха оставляет на поле след в виде
линии. В каждый конкретный момент известно положение исполнителя и направление его движения. У
исполнителя существует две команды: Вперѐд n (где n  — целое число), вызывающая передвижение
Черепахи на n единиц в том направлении, куда указывает еѐ голова, и Направо m (где m  — целое
число), вызывающая изменение направления движения на m градусов по часовой стрелке. Запись
Повтори k [Команда1 Команда2 … КомандаS]
означает, что последовательность из S команд повторится k раз. Черепахе был дан для исполнения
следующий алгоритм:
Повтори 4 [Вперѐд 12 Направо 150 Вперѐд 12 Направо 30]Определите, сколько точек с целочисленными координатами будут находиться внутри области,
ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.
"""
### TODO: Ответ — 60 (12 * 5)
##from turtle import *
##
##m = 40
##speed(0)
##screensize(10000, 10000)
##color('red', 'blue')
##left(90)
##begin_fill()
##
##for _ in range(4):
##    forward(12 * m)
##    right(150)
##    forward(12 * m)
##    right(30)
##
##end_fill()
##penup()
##for x in range(-1 * m, 15 * m, m):
##    for y in range(-15 * m, 15 * m, m):
##        goto(x, y)
##        dot(3, 'white')
##mainloop()


"""
7.  Автоматическая фотокамера производит растровые изображения размером 1600 на 1200 пикселей.
При этом объѐм файла с изображением не может превышать 1 Мбайт, упаковка данных не
производится. Какое максимальное количество цветов можно использовать в палитре?
"""
### TODO: Ответ — 16
##print(2**int((2**23) / (1600*1200)))


"""
8.  Все 5-буквенные слова, составленные из букв Е, Ж, И, записаны в алфавитном порядке и
пронумерованы.
Вот начало списка:
1.  ЕЕЕЕЕ
2.  ЕЕЕЕЖ
3.  ЕЕЕЕИ
4.  ЕЕЕЖЕ
……
Запишите слово, которое стоит под номером 238.
"""
### TODO: Ответ — ИИИЖЕ
##for i, s in enumerate(product('ЕЖИ', repeat=5)):
##    if i + 1 == 238:
##        print(''.join(s))
##        break


"""
9.  Откройте файл электронной таблицы, содержащей вещественные числа  — результаты ежечасного
измерения температуры воздуха в течение трѐх месяцев. Найдите разность между максимальной
температурой воздуха с 1 апреля по 30 апреля с 9:00 до 12:00 включительно и средним значением
температуры воздуха в эти часы в апреле, используя данные, представленные в таблице.
В ответе запишите только целую часть получившегося числа.
"""
### TODO: Ответ — 3


"""
10.  С помощью текстового редактора определите, сколько раз, не считая сносок, встречается слово
«Онегин» в тексте романа в стихах А. С. Пушкина «Евгений Онегин». Другие формы слова «Онегин»,
такие как «Онегина», «Онегиным» и т. д., учитывать не следует. В ответе укажите только число.
"""
### TODO: Ответ — 12


"""
11.  Каждый сотрудник предприятия получает электронный пропуск, на котором записаны личный код
сотрудника и срок действия пропуска. Личный код состоит из 14 символов, каждый из которых может
быть одной из 26 заглавных латинских букв или 10 цифр. Для записи кода на пропуске отведено
минимально возможное целое число байтов, при этом используют посимвольное кодирование, все
символы кодируют одинаковым минимально возможным количеством битов. Срок действия
записывается как номер года (число от 0 до 99, означающее год от 2000 до 2099) и номер месяца (число
от 1 до 12).
Номер года и номер месяца записаны на пропуске как двоичные числа, каждое из них занимает
минимально возможное число битов, а два числа вместе – минимально возможное число байтов.
Сколько байтов занимает вся информация на пропуске? В ответе запишите только целое число –
количество байтов.
"""
### TODO: Ответ — 13
##print(ceil((6*14)/8) + ceil((7+4)/8))


"""
12.  Исполнитель Редактор получает на вход строку цифр и преобразовывает еѐ. Редактор может
выполнять две команды, в обеих командах v и w обозначают цепочки цифр.
А)  заменить (v, w).
Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение
команды
заменить (111, 27)
преобразует строку 05111150 в строку 0527150.
Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.
Б)  нашлось (v).
Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается,
то команда возвращает логическое значение «истина», в противном случае возвращает значение
«ложь». Строка
исполнителя при этом не изменяется.
Цикл
    ПОКА условие
        последовательность команд
    КОНЕЦ ПОКА
выполняется, пока условие истинно.
В конструкции
    ЕСЛИ условие
        ТО команда1
    КОНЕЦ ЕСЛИ
выполняется команда1 (если условие истинно).В конструкции
    ЕСЛИ условие
        ТО команда1
        ИНАЧЕ команда2
    КОНЕЦ ЕСЛИ
выполняется команда1 (если условие истинно) или команда2 (если условие ложно).
Дана программа для редактора:
НАЧАЛО
    ПОКА нашлось (1111)
        заменить (1111, 22)
        заменить (222, 1)
    КОНЕЦ ПОКА
КОНЕЦ
Известно, что исходная строка содержала больше 200 единиц и не содержала других цифр. При какой
наименьшей длине исходной строки результат работы данной программы будет содержать наименьшее
возможное число единиц?
"""
### TODO: Ответ — 204
##for i in range(201, 1000):
##    s = '1' * i
##    while '1111' in s:
##        s = s.replace('1111', '22', 1)
##        s = s.replace('222', '1', 1)
##    if s.count('1') == 0:
##        print(i)
##        break


"""
13.  На рисунке  — схема дорог, связывающих пункты А, Б, В, Г, Д, Е, Ж, З, И, К, Л, М.
Сколько существует различных путей, ведущих из города А в город М, проходящих через город В?
"""
### TODO: Ответ — 60


"""
14.  Значение выражения записали в системе счисления с основанием 7
без незначащих нулей. Какая цифра чаще всего встречается в этой записи?
"""
### TODO: Ответ — 0
##n = to_base(5*343**8+4*49**12+7**14-98, 7)
##print(max(n, key=lambda x: n.count(x)))


"""
15.  Обозначим через m&n поразрядную конъюнкцию неотрицательных целых чисел m и n.
Например, 14&5  =  11102&01012 = 01002 = 4.
Для какого наименьшего неотрицательного целого числа А формула
x&49 ≠ 0 → (x&41 = 0 → x&А ≠ 0)
тождественно истинна (т. е. принимает значение 1 при любом неотрицательном целом значении
переменной х)?
"""
### TODO: Ответ — 16
##for A in range(10000):
##    accept = True
##    for x in range(10000):
##        f = x & 49 == 0 or (x & 41 != 0 or x & A != 0)
##        if not f:
##            accept = False
##            break
##    if accept:
##        print(A)
##        break


"""
16.  Алгоритм вычисления значения функции F(n), где n  — целое неотрицательное число, задан
следующими соотношениями:
F(0) = 0;
F(n) = F(n − 1) + n.
Укажите количество таких чисел n из интервала 765 432 010 ≤ n ≤ 1 542 613 234, для которых F(n) не
делится без остатка на 3.
"""
### TODO: Ответ — 259060409
##n = 1542613235-765432010
##print(int(n / 3) + 1)

"""
17.  В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не
превышает 10 000. Определите и запишите в ответе сначала количество пар элементов
последовательности, у которых сумма нечѐтна, а произведение делится на 5, затем максимальную из
сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента
последовательности. Порядок элементов в паре не важен.
"""
### TODO: Ответ — 9082691 19995
##with open('data/17.txt') as f:
##    data = list(map(int, f.readlines()))
##c = 0
##mx = 0
##for pairs in combinations(data, r=2):
##    summ = sum(pairs)
##    if summ & 1 and not reduce(lambda a, b: a * b, pairs) % 5:
##        c += 1
##        mx = max(mx, summ)
##print(c, mx)


"""
18.  Робот стоит в левом верхнем углу прямоугольного поля, в каждой клетке которого записано
натуральное число. За один ход робот может переместиться на одну клетку вправо или на одну клетку
вниз. Выходить за пределы поля робот не может. В начальный момент запас энергии робота равен
числу, записанному в стартовой клетке. После каждого шага робота запас энергии изменяется по
следующим правилам: если число в очередной клетке меньше, чем в предыдущей, запас увеличивается
на величину этого числа, если больше  — уменьшается на эту же величину.
Определите максимальный и минимальный запас энергии, который может быть у робота после
перехода в правую нижнюю клетку поля. В ответе запишите два числа: сначала максимально
возможное значение, затем минимальное.Исходные данные записаны в электронной таблице.
Пример входных данных (для таблицы размером 4 × 4):
200 8 69 50
87 35 7 17
32 1 9 32
44 12 80 43
При указанных входных данных максимальное значение получается при движении по маршруту
200 + 87 + 35 + 7 − 9 − 80 + 43  =  283, а минимальное при движении по маршруту
200 + 8 − 69 + 7 − 17 − 32 − 43  =  54.
"""
### TODO: Ответ — 2344 919


"""
19.  Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки
ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень или
увеличить количество камней в куче в два раза. Например, имея кучу из 15 камней, за один ход можно
получить кучу из 16 или 30 камней. Для того чтобы делать ходы, у каждого игрока есть неограниченное
количество камней.
Игра завершается в тот момент, когда количество камней в куче становится не менее 22. Победителем
считается игрок, сделавший последний ход, т. е. первым получивший кучу, в которой будет 22 или
больше камней.
В начальный момент в куче было S камней; 1 ≤ S ≤ 21.
Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах
противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой
ситуации, которая ему может
встретиться при различной игре противника.
Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Укажите
минимальное значение S, когда такая ситуация возможна.
20.  Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки
ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень или
увеличить количество камней в куче в два раза. Например, имея кучу из 15 камней, за один ход можно
получить кучу из 16 или 30 камней. Для того чтобы делать ходы, у каждого игрока есть неограниченное
количество камней.
Игра завершается в тот момент, когда количество камней в куче становится не менее 22. Победителем
считается игрок, сделавший последний ход, т. е. первым получивший кучу, в которой будет 22 или
больше камней.
В начальный момент в куче было S камней; 1 ≤ S ≤ 21.
Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах
противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой
ситуации, которая ему может
встретиться при различной игре противника.
Найдите два таких значения S, при которых у Пети есть выигрышная стратегия, причѐм одновременно
выполняются два условия:
— Петя не может выиграть за один ход;
— Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания без разделительных знаков.
21.  Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки
ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень или
увеличить количество камней в куче в два раза. Например, имея кучу из 15 камней, за один ход можно
получить кучу из 16 или 30 камней. Для того чтобы делать ходы, у каждого игрока есть неограниченное
количество камней.
Игра завершается в тот момент, когда количество камней в куче становится не менее 22. Победителем
считается игрок, сделавший последний ход, т. е. первым получивший кучу, в которой будет 22 или
больше камней.
В начальный момент в куче было S камней; 1 ≤ S ≤ 21.
Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах
противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой
ситуации, которая ему можетвстретиться при различной игре противника.
Найдите минимальное значение S, при котором одновременно выполняются два условия:
— у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при
любой игре Пети;
— у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
"""
### TODO: Ответ — 
###  19) 6
###  20) 5 9
###  21) 8
##@lru_cache(None)
##def game(x):
##    if x >= 22:
##        return 0
##    tmp = [game(x + 1), game(x * 2)]
##    ng = [i for i in tmp if i <= 0]
##    if ng:
##        return -max(ng) + 1
##    return -max(tmp)
##
##
##print(*[i for i in range(1, 22) if game(i) == 2])
##print(min(i for i in range(1, 22) if game(i) == -2))


"""
22.  В файле 22.xlsx содержится информация о совокупности N вычислительных процессов, которые
могут выполняться параллельно или последовательно. Будем говорить, что процесс B зависит от
процесса A, если для выполнения процесса B необходимы результаты выполнения процесса A. В этом
случае процессы могут выполняться только последовательно.
Информация о процессах представлена в файле в виде таблицы. В первой строке таблицы указан
идентификатор процесса (ID), во второй строке таблицы  — время его выполнения в миллисекундах, в
третьей строке перечислены с разделителем «;» ID процессов, от которых зависит данный процесс. Если
процесс является независимым, то в таблице указано значение 0.
Определите минимальное время, через которое завершится выполнение всей совокупности процессов,
при условии, что все независимые друг от друга процессы могут выполняться параллельно.
Типовой пример организации данных в файле:
ID процесса B Время выполнения процесса B (мс) ID процесса(ов) A
1 4 0
2 3 0
3 1 1;2
4 7 3
В данном случае независимые процессы 1 и 2 могут выполняться параллельно, при этом процесс 1
завершится через 4 мс, а процесс 2  — через 3 мс с момента старта. Процесс 3 может начаться только
после завершения обоих процессов 1 и 2, то есть, через 4 мс после старта. Он длится 1 мс и закончится
через 4 + 1 = 5 мс после старта. Выполнение процесса 4 может начаться только после завершения
процесса 3, то есть, через 5 мс. Он длится 7 мс, так что минимальное время завершения всех процессов
равно 5 + 7 = 12 мс.
"""
### TODO: Ответ — 25


"""
23.  У исполнителя Арифметик две команды, которым присвоены номера:
1.  прибавь 1,
2.  прибавь 3.
Первая из них увеличивает на 1 число на экране, вторая увеличивает это число на 3.
Программа для Арифметика  — это последовательность команд.
Сколько существует программ, которые число 2 преобразуют в число 15?
"""
### TODO: Ответ — 88
##def arifm(n, end):
##    if n == end:
##        return 1
##    if n > end:
##        return 0
##    return arifm(n + 1, end) + arifm(n + 3, end)
##
##
##print(arifm(2, 15))


"""
24.  Текстовый файл состоит не более чем из 106 символов A, B и C. Определите максимальное
количество идущих подряд символов, среди которых каждые два соседних различны.
Для выполнения этого задания следует написать программу. Ниже приведѐн файл, который необходимо
обработать с помощью данного алгоритма.
"""
### TODO: Ответ — 42
##with open('data/24.txt') as f:
##    s = f.read()
##mx = 0
##for i in range(len(s) - 1):
##    j = i + 1
##    while j < len(s) and s[j-1] != s[j]:
##        j += 1
##    j -= 1
##    mx = max(mx, j - i + 1)
##print(mx)


"""
25.  Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку
[201455; 201470], числа, имеющие ровно 4 различных натуральных делителя. Выведите эти четыре
делителя для каждого найденного числа в порядке возрастания.
"""
### TODO: Ответ —
###  1 3 67153 201459
###  1 13 15497 201461
###  1 29 6947 201463
###  1 2 100733 201466
##for n in range(201455, 201471):
##    dl = dels(n)
##    if len(dl) == 4:
##        print(*sorted(dl))


"""
26.  Системный администратор раз в неделю создаѐт архив пользовательских файлов. Однако объѐм
диска, куда он помещает архив, может быть меньше, чем суммарный объѐм архивируемых файлов.
Известно, какой объѐм занимает файл каждого пользователя.
По заданной информации об объѐме файлов пользователей и свободном объѐме на архивном диске
определите максимальное число пользователей, чьи файлы можно сохранить в архиве, а также
максимальный размер имеющегося файла, который может быть сохранѐн в архиве, при условии, что
сохранены файлы максимально возможного числа пользователей.
Входные данные.
В первой строке входного файла находятся два числа: S  — размер свободного места на диске
(натуральное число, не превышающее 10 000) и N  — количество пользователей (натуральное число, не
превышающее 2000). В следующих N строках находятся значения объѐмов файлов каждого
пользователя (все числа натуральные, не превышающие 100), каждое в отдельной строке.Запишите в ответе два числа: сначала наибольшее число пользователей, чьи файлы могут быть
помещены в архив, затем максимальный размер имеющегося файла, который может быть сохранѐн в
архиве, при условии, что сохранены файлы максимально возможного числа пользователей.
Пример входного файла:
100 4
80
30
50
40
При таких исходных данных можно сохранить файлы максимум двух пользователей. Возможные
объѐмы этих двух файлов 30 и 40, 30 и 50 или 40 и 50. Наибольший объѐм файла из перечисленных
пар  — 50, поэтому ответ для приведѐнного примера:
2 50
"""
### TODO: Ответ — 509 31
##with open('data/26.txt') as f:
##    s, n = map(int, f.readline().split())
##    data = list(map(int, f.readlines()))
##data.sort()
##res = c = i = 0
##while res + data[i] <= s:
##    res += data[i]
##    c += 1
##    i += 1
##res -= data[i]
##while res + data[i] <= s:
##    i += 1
##res += data[i-1]
##print(c, data[i-1])


"""
27.  Набор данных состоит из нечѐтного количества пар натуральных чисел. Необходимо выбрать из
каждой пары ровно одно число так, чтобы чѐтность суммы выбранных чисел совпадала с чѐтностью
большинства выбранных чисел и при этом сумма выбранных чисел была как можно меньше.
Определите минимальную сумму, которую можно получить при таком выборе. Гарантируется, что
удовлетворяющий условиям выбор возможен.
Входные данные.
Первая строка входного файла содержит число N  — общее количество пар в наборе. Каждая из
следующих N строк содержит два натуральных числа, не превышающих 10 000.
Пример входного файла:
5
15 8
5 11
6 3
7 2
9 14
Для указанных данных надо выбрать числа 8, 5, 3, 2 и 9. Большинство из них нечѐтны, сумма
выбранных чисел равна 27 и тоже нечѐтна. В ответе надо записать число 27.
Вам даны два входных файла (A и B), каждый из которых имеет описанную выше структуру. В ответе
укажите два числа: сначала значение искомой суммы для файла A, затем для файла B.
Предупреждение: для обработки файла B не следует использовать переборный алгоритм,
вычисляющий сумму для всех возможных вариантов, поскольку написанная по такому алгоритму
программа будет выполняться слишком долго.
"""
### TODO: Ответ — 61772 18484085
def solution(N, data):
    data = sorted((sorted(i) for i in data), key=lambda x: (x[1] - x[0]))
    res = []
    for elem in data:
        res.append(elem[0])
    i = 0
    inf = (len([elem for elem in res if elem % 2 == 0]), len([elem for elem in res if elem % 2 == 1]))
    while inf[sum(res) % 2] <= inf[1 if sum(res) % 2 == 0 else 0]:
        if data[i][0] % 2 != data[i][1] % 2:
            res[i] = data[i][1]
            inf = (len([elem for elem in res if elem % 2 == 0]), len([elem for elem in res if elem % 2 == 1]))
        i += 1
    return sum(res), len([i for i in res if i % 2 == sum(res) % 2]), len(res)

with open('data/27.txt') as f:
    N = int(f.readline())
    data = list(map(lambda x: list(map(int, x.split())), f.readlines()))
print(solution(N, data))

with open('data/27-A.txt') as f:
    N = int(f.readline())
    data = list(map(lambda x: list(map(int, x.split())), f.readlines()))
print(solution(N, data))

with open('data/27-B.txt') as f:
    N = int(f.readline())
    data = list(map(lambda x: list(map(int, x.split())), f.readlines()))
print(solution(N, data))

