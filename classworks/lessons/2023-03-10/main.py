from itertools import product

'''
1 Между населёнными пунктами A, B, C, D, E, F построены дороги, протяжённость которых
приведена в таблице. Отсутствие числа в таблице означает, что прямой дороги между
пунктами нет.
Определите длину кратчайшего пути между пунктами A и F, не
проходящего через пункт C (при условии, что передвигаться можно только по построенным
дорогам).
'''
### TODO: Ответ – 11


'''
2 (А. Богданов) Логическая функция F задаётся выражением ((w → x) ≠ z) ∧ y. На рисунке
приведён частично заполненный фрагмент таблицы истинности функции F, содержащий
неповторяющиеся строки. Определите, какому столбцу таблицы истинности функции F
соответствует каждая из переменных x, y, z, w.
В ответе напишите буквы x, y, z, w в том порядке, в котором
идут соответствующие им столбцы. Буквы в ответе пишите подряд, никаких разделителей
между буквами ставить не нужно.
'''
### TODO: Ответ – xywz
##print('x y w z f')
##for x, y, z, w in product([0, 1], repeat=4):
##    f = int(((not w or x) != z) and y)
##    print(x, y, w, z, f)


'''
3 (А. Рогов) В файле 3-40.xls приведён фрагмент базы фрагмент базы данных «Города и
страны», описывающей различные страны, города и языки. База данных состоит из трех
таблиц. Таблица «Страны» (код, название, континент, регион, площадь, год получения
независимости, население, ОПЖ – ожидаемая продолжительность жизни, ВНД – валовый
национальный доход, предыдущее значение ВНД, форма правления, идентификатор
столицы). Таблица «Города» (идентификатор, название, код страны, район, население).
Таблица «Языки» (код языка, код страны, название, является ли официальным, процент
использования в стране). По некоторым значениям данных нет, в этом случае в таблице
внесено значение NULL. На рисунке приведена схема базы данных.
Используя информацию из приведённой базы
данных, определите среднее население стран Европы, в которых наиболее популярный
официальный язык используют менее 60% населения. В ответе укажите только целую часть
получившегося числа.
'''
### TODO: Ответ –  2129900


'''
5 Алгоритм получает на вход натуральное число N > 1 и строит по нему новое число R
следующим образом:
1) Строится двоичная запись числа N.
2) Подсчитывается количество нулей и единиц в полученной записи. Если их количество
одинаково, в конец записи добавляется её последняя цифра. В противном случае в конец
записи добавляется цифра, которая встречается реже.
3) Шаг 2 повторяется ещё два раза.
4) Результат переводится в десятичную систему счисления.
При каком наибольшем исходном числе N < 500 в результате работы алгоритма получится
число, которое делится на 4 и не делится на 8?
'''
### TODO: Ответ – 225
##for n in range(2, 501):
##    r = bin(n)[2:]
##    for _ in range(3):
##        e = r.count('1')
##        z = r.count('0')
##        if e == z:
##            r += r[-1]
##        else:
##            r += '0' if z < e else '1'
##    r = int(r, 2)
##    if not r % 4 and r % 8:
##        print(n)
    

'''
25 (В. Селезнев) Назовём маской числа последовательность цифр, в которой также могут
встречаться следующие символы:
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины; в том числе
«*» может задавать и пустую последовательность.
Среди натуральных чисел, больших 2352000, найдите числа, все простые делители которых,
выписанные без пробелов по возрастанию, образуют число, соответствующее маске
«10*29». Например, число 234566 имеет 3 простых делителя: 2, 17, 6899, они образуют
число 2176899, которое соответствует маске «21*9». В ответе укажите первые 5 найденных
чисел в порядке возрастания, справа от каждого числа запишите его наибольший простой
делитель.
'''
### FIXME: Ответ –
def pd(n):
    r = []
    i = 2
    while i**2 <= n:
        if not n % i:
            r.append(i)
            n //= i
        else:
            i += 1
    if n > 1:
        r.append(n)
    return sorted(set(r))
    

for i in range(2352001, 100000000):
    spd = ''.join(map(str, pd(i)))
    if spd.startswith('10') and spd.endswith('29'):
        print(i, pd(i)[-1])

