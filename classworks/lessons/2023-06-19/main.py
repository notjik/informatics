"""
24) № 8510 Апробация 17.05 (Уровень: Средний)
Текстовый файл состоит из символов, обозначающих прописные буквы латинского
алфавита.
Определите максимальное количество идущих подряд символов,
среди которых никакие две буквы из набора букв N, O и P (с учетом повторений)
не записаны подряд.
Для выполнения этого задания следует написать программу.
Файлы к заданию:24.txt
"""
### TODO: Ответ —
with open('data/24_8510.txt') as f:
    s = f.read()


"""
25) № 7013 (Уровень: Средний)
Назовём маской числа последовательность цифр,
в которой также могут встречаться следующие символы:   
- символ «?» означает ровно одну произвольную цифру;
- символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
Найдите все натуральные числа, не превосходящие 109, для которых выполнены
все условия:
- соответствуют маске *31*65?;
- делятся на 31 и 2031 без остатка;
- количество делителей числа является результатом любой степени двойки
В ответе запишите в первом столбце таблицы все найденные числа в порядке
возрастания, справа от каждого числа их частное от деления на 2031.
"""
### TODO: Ответ —
###  53831655 26505
###  333126651 164021
###  512313657 252247
###  647931651 319021
###  831966654 409634
##from fnmatch import fnmatch
##
##def c_dels(x):
##    res = 0
##    i = 1
##    while i**2 <= x:
##        if i**2 == x:
##            res += 1
##        elif x % i == 0:
##            res += 2
##        i += 1
##    return res
##
##def is_pow2(x):
##    while x % 1 == 0:
##        if x / 2 == 1:
##            return True
##        x /= 2
##    return False
##    
##
##for i in range(0, 10**9, 31*2031):
##    if fnmatch(str(i), '*31*65?') and is_pow2(c_dels(i)):
##        print(i, i // 2031)


"""	
26) № 4938 (Уровень: Сложный)
Бизнес-центру необходимо составить расписание мероприятий в конференц зале.
В каждый момент времени в зале может проводиться только одно мероприятие.
Организаторы мероприятий подали заявки, в которых указано время начала и
время окончания их мероприятий. Из данных заявок необходимо составить
расписание так, чтобы количество проводимых мероприятий было наибольшим.
При этом если одна заявка закончилась, а следующая началась в то же время,
то их можно ставить подряд.
Входные данные.
В первой строке входного файла находятся два числа через пробел:
число L - общая длительность работы зала (натуральное число не превышающее 109)
и число N - количество поданных заявок (натуральное число,
не превышающее 10 000). В следующих N строках находится по два числа через
пробел. Первое число - время начало мероприятия от начала работы зала
(натуральное число, не превышающее 109). Второе число - время окончания
(натуральное число, не превышающее 109).
Запишите в ответе два числа: наибольшее возможное количество мероприятий в
расписании, а также наименьшее возможное время начала последнего мероприятия.
Пример входного файла:
1000 7
50 200
0 300
200 450
500 550
550 700
700 800
750 900
При таких условиях расписание можно составить из мероприятий: 50-200; 200-450;
500-550; 550-700; 700-800. Поэтому ответ для приведённого примера 5 700.
Файлы к заданию:26.txt
"""
### TODO: Ответ — 91 9881
##with open('data/26_4938.txt') as f:
##    L, N = map(int, f.readline().split())
##    data = list(map(lambda x: tuple(map(int, x.split())), f.readlines()))
##data.sort(key=lambda x: (x[1] - x[0], x[0]))
##time = [0] * (L + 1)
##res = []
##for i in range(N):
##    if all(time[t] != 2 for t in range(data[i][0], data[i][1] + 1)):
##        time[data[i][0]] = time[data[i][1]] = 1
##        for v in range(data[i][0] + 1, data[i][1]):
##            time[v] = 2
##        res.append(data[i])
##print(len(res), max(res)[0])



