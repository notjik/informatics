from itertools import combinations, product

"""
1 На рисунке справа схема дорог Н-ского района изображена в виде графа, в таблице содержатся сведения о
длинах этих дорог (в километрах).
Так как таблицу и схему рисовали
независимо друг от друга, то нумерация населённых пунктов в таблице никак не связана с буквенными
обозначениями на графе. Укажите кратчайший путь из пункта Б в пункт Ж. В ответе перечислите все
населённые пункты, через которые проходит путь. Например, путь из Г в В через А и Б записывается как
ГАБВ.
"""
# # TODO: Ответ – бвгеж


"""
2 (Е. Джобс) Логическая функция F задаётся выражением a ≡ b ∨ b → c.
На рисунке приведён частично заполненный фрагмент таблицы
истинности функции F, содержащий неповторяющиеся строки. Определите, какому столбцу таблицы
истинности функции F соответствует каждая из переменных a, b, c.
"""
# # TODO: Ответ – bca
# print('b c a f')
# for a, b, c in product([0, 1], repeat=3):
#     f = int(a == (not (b or b) or c))
#     if f:
#         print(b, c, a, f)


"""
3 (А. Рогов) В файле 3-30.xls приведён фрагмент базы фрагмент базы данных «Русский рок», описывающей
советские и российские рок-группы. База данных состоит из двух таблиц. Таблица «Группы» содержит
информацию о музыкальных коллективах: ID, название, год основания. Таблица «Альбомы» содержит
информацию о студийных музыкальных альбомах: ID, название, ID группы, год издания, количество песен.
Для каждой группы в базе данных указано ровно 3 альбома. На рисунке приведена схема базы данных.
Используя информацию из приведённой базы данных,
определите, у скольких групп из указанных в базе данных с момента основания и до выхода последнего из
указанных альбомов прошло не менее 20 лет.
"""
# # TODO: Ответ – 4

"""
4 (С. Якунин) Для кодирования некоторой последовательности, состоящей из букв А, Т, З, Н, И, Е решили
использовать неравномерный двоичный код, удовлетворяющий условию Фано. Для букв А и Т
использовали кодовые слова 01 и 00, соответственно. Найдите кодовое слово наибольшей длины, если
известно, что слово АНТИТЕЗА закодировано, с помощью 21 бита. Если возможно несколько вариантов
ответа, выберите код с наименьшим числовым значением.
"""
# # TODO: Ответ – 011000001010011011101
# s = '01 1000 00 101 00 110 111 01'.replace(' ', '')
# if len(s) == 21:
#     print(s)


"""
5 Автомат обрабатывает натуральное число N > 1 по следующему алгоритму:
1) Строится двоичная запись числа N.
2) В конец записи (справа) дописывается вторая справа цифра двоичной записи.
3) В конец записи (справа) дописывается вторая слева цифра двоичной записи.
4) Результат переводится в десятичную систему.
Пример. Дано число N = 11. Алгоритм работает следующим образом.
1) Двоичная запись числа N: 11 = 10112
2) Вторая справа цифра 1, новая запись 101112.
3) Вторая слева цифра 0, новая запись 1011102.
4) Десятичное значение полученного числа 46.
Для скольких значений N в результате работы алгоритма получится число, принадлежащее отрезку [150;
250]?
"""
# # TODO: Ответ – 24
# c = 0
# for n in range(2, 10000):
#     r = bin(n)[2:]
#     r += r[-2]
#     r += r[1]
#     r = int(r, 2)
#     if 150 <= r <= 250:
#         c += 1
# print(c)


"""
6 Исполнитель Черепаха действует на плоскости с декартовой системой координат. В начальный момент
Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси
ординат, хвост опущен. При опущенном хвосте Черепаха оставляет на поле след в виде линии. В каждый
конкретный момент известно положение исполнителя и направление его движения. У исполнителя
существует две команды: Вперёд n (где n – целое число), вызывающая передвижение Черепахи на n
единиц в том направлении, куда указывает её голова, и Направо m (где m – целое число), вызывающая
изменение направления движения на m градусов по часовой стрелке. Запись
Повтори k [Команда1 Команда2 … КомандаS]
означает, что последовательность из S команд повторится k раз. Черепахе был дан для исполнения
следующий алгоритм:
Повтори 10 [Направо 60 Вперёд 10 Направо 60]
Определите, сколько точек с целочисленными координатами будут находиться внутри области,
ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.
"""
# # TODO: Ответ – 266 ((17*2+9*11)*2)
# from turtle import *
#
# screensize(2500, 2500)
# left(90)
# m = 50
# color('black', 'red')
# begin_fill()
# speed(0)
#
# for i in range(10):
#     right(60)
#     forward(10 * m)
#
# end_fill()
# penup()
# for x in range(-1 * m, 19 * m, m):
#     for y in range(-17 * m, 8 * m, m):
#         goto(x, y)
#         dot(3, 'green')
# mainloop()
#
# print((17*2+9*11)*2)


"""
9 (П. Финкель) Откройте файл электронной таблицы 9-138.xls, содержащей целые числа – координаты трёх
точек в формате X1, X2, X3, Y1, Y2, Y3. Найдите количество таких строк, где все три точки лежат в одной
четверти координатной плоскости.
"""
# # TODO: Ответ – 559


"""
18 (А. Кабанов) Дана последовательность натуральных чисел. Рассматриваются всевозможные пары чисел,
порядковые номера которых отличаются не более чем на 5. Определите количество таких пар, для которых
сумма чисел находится в диапазоне от 1000 до 1500, не включая 1000 и 1500.
Исходные данные записаны в виде столбца электронной таблицы в файле 18-k3.xls.
"""
# # TODO: Ответ – 20703
# with open('data/18-k3.txt') as f:
#     data = list(map(int, f.readlines()))
# c = 0
# for i in range(len(data)):
#     start = max(i, 5)
#     end = min(i, len(data) - 5)
#     for interval in set(combinations(data[start - 5:end + 6], r=2)):
#         if 1000 < sum(interval) < 1500:
#             c += 1
# print(c)


"""
22 (А. Кабанов) В файле 22-33.xls содержится информация о совокупности N вычислительных процессов,
которые могут выполняться параллельно или последовательно. Будем говорить, что процесс B зависит от
процесса A, если для выполнения процесса B необходимы результаты выполнения процесса A.
Информация о процессах представлена в файле в виде таблицы. В первом столбце таблицы указан
идентификатор процесса (ID), во втором столбце таблицы – время его выполнения в миллисекундах, в
третьем столбце перечислены с разделителем «;» ID процессов, от которых зависит данный процесс. Если
процесс является независимым, то в таблице указано значение 0. Определите максимально возможное
целочисленное неизвестное время выполнения процесса t, при котором выполнение всей совокупности
процессов может завершиться не более чем за 107 мс.
Типовой пример организации данных в файле:
Пусть выполнение данной совокупности процессов
закончилось за 15 мс. В данном случае независимые процессы 1 и 2 могут выполняться параллельно, при
этом процесс 1 завершится через 4 мс, а процесс 2 – через 3 мс с момента старта. Процесс 3 может начаться
только после завершения обоих процессов 1 и 2, то есть, через 4 мс после старта. Он длится t мс и
закончится через 4 + t мс после старта. Выполнение процесса 4 может начаться только после завершения
процесса 3, то есть, через 4 + t мс. Он длится 7 мс, так что минимальное время завершения всех процессов
равно 4 + t + 7 = 15 мс. Следовательно, t = 15 – 4 – 7 = 4 мс. Ответ для этого примера: 4.
"""
# # TODO: Ответ – 35
