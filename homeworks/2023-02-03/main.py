from itertools import product, permutations, combinations
from math import ceil
from functools import reduce

import scratches_algorithms

"""
1. На рисунке справа схема дорог Н-ского района изображена в виде графа, в таблице содержатся
сведения о длинах этих дорог (в километрах).
Так как таблицу и схему
рисовали независимо друг от друга, то нумерация населённых пунктов в таблице никак не связана с
буквенными обозначениями на графе. Укажите кратчайший путь из пункта Б в пункт Ж. В ответе
перечислите все населённые пункты, через которые проходит путь. Например, путь из Г в В через А и
Б записывается как ГАБВ.
"""
# # TODO: Ответ – БАВДГЕЖ (6+7+5+8+13+20)


"""
2. (Е. Джобс) Логическая функция F задаётся выражением ¬(x ≡ y → z).
На рисунке приведён фрагмент таблицы истинности функции F,
содержащий неповторяющиеся строки. Определите, какому столбцу таблицы истинности функции F
соответствует каждая из переменных x, y, z.
"""
# # TODO: Ответ – yxz
# s = '|\033[33m {} \033[0m|\033[33m {} \033[0m|\033[33m {} \033[0m|\033[32m {} \033[0m|'
# print('_________________')
# print(s.format('y', 'x', 'z', 'f'))
# for y, x, z in product([0, 1], repeat=3):
#     f = int(not (x == (not y or z)))
#     if y == 0 and z == 1:
#         print(s.format(y, x, z, f))
# print('_________________')


"""
3. (Е. Джобс) В файле 3-74.xls приведён фрагмент базы данных «Инвестиционные счета». Таблица
«Счета» содержит информацию о владельце счёта и дате его открытия. Таблица «Курс валют»
содержит информацию о курсах валют по отношению к рублю. Таблица «Начисления» содержит
информацию о всех операциях со счетом: код счёта, код валюты, дату операции и сумму начисления
(она может быть отрицательной). На рисунке приведена схема указанной базы данных.
Используя информацию из приведённой базы данных,
определите на сколько изменилось состояние счёта Агаповой А.М. в рублях за указанный период. В
ответе укажите только целую часть полученного значения.
"""
# # TODO: Ответ – 332


"""
4. Для кодирования некоторой последовательности, состоящей из букв А, Б, В, Г, Д, Е, Ж, З, И, Й.
решили использовать неравномерный двоичный код, удовлетворяющий условию Фано. Для букв А, Б,
В, Г, Д, Е, Ж, З, И использовали соответственно кодовые слова 0011, 1011, 1111, 0110, 0001, 1100,
0010, 0111, 0000. Укажите кратчайшее возможное кодовое слово для буквы Й, при котором код будет
допускать однозначное декодирование. Если таких кодов несколько, укажите код с наименьшим
числовым значением.
"""
# # TODO: Ответ – 010


"""
5. Автомат обрабатывает натуральное число N < 256 по следующему алгоритму:
1) Строится восьмибитная двоичная запись числа N.
2) Инвертируются все разряды исходного числа, кроме последней единицы и стоящих за ней нулей (0
заменяется на 1, 1 на 0).
3) Полученное число переводится в десятичную систему счисления.
Для какого значения N результат работы алгоритма равен 178?
"""
# # TODO: Ответ – 77
# for n in range(256):
#     r = bin(n)[2:]
#     r = '0' * (8 - len(r)) + r
#     r = r.replace('0', 'x').replace('1', '0').replace('x', '1')
#     r = int(r, 2)
#     if r == 178:
#         print(n)


"""
6. (ЕГЭ-2022) Определите, при каком наименьшем введённом значении переменной s программа
выведет число 8.
"""
# # TODO: Ответ – 81
# for i in range(1000):
#     s = i
#     s = (s - 21) // 10
#     n = 1
#     while s >= 0:
#         n = n * 2
#         s = s - n
#     if n == 8:
#         print(i)
#         break


"""
7. Камера делает фотоснимки 1024×768 пикселей. При этом объём файла с изображением не может
превышать 220 Кбайт, упаковка данных не производится. Какое максимальное количество цветов
можно использовать в палитре изображения?
"""
# # TODO: Ответ – 4
# print(2**int((220*2**13)/(1024*768)))


"""
8. (А. Куканова) Ася составляет 7-буквенные слова из букв А, П, Е, Л, Ь, С, И, Н. Все буквы слова
различны. Буква Ь, если встречается, стоит между двумя согласными. Сколько таких слов может
составить Ася?
"""
# # TODO: Ответ – 12240
# c = 0
# for s in permutations('АПЕЛЬСИН', r=7):
#     s = ''.join(s)
#     if 'Ь' in s:
#         if s[0] != 'Ь' and s[-1] != 'Ь' and s[s.find('Ь')-1] in 'ПЛСН' and s[s.find('Ь')+1] in 'ПЛСН':
#             c += 1
#     else:
#         c += 1
# print(c)


"""
9. (А. Кабанов) Откройте файл электронной таблицы 9-132.xls, содержащей в каждой строке четыре
натуральных числа – координаты двух точек на плоскости. Первые два числа в каждой строке –
координаты x1
 и y1
 первой точки, третье и четвёртое – координаты x2
 и y2
 второй точки. Выясните,
какое количество пар точек может являться концами отрезка, пересекающего ровно одну из осей X
или Y
"""
# # TODO: Ответ – 184


"""
10. В файле 10-170.docx приведена повесть-феерия А. Грина «Алые паруса». Сколько раз встречается
местоимение «я» (с заглавной или строчной буквы) в тексте повести (не считая сносок)? Сочетания
«я-то» учитывать не нужно. В ответе укажите только число
"""
# # TODO: Ответ – 157 (158-1)


"""
11. (ege.yandex.ru) При регистрации в компьютерной системе, используемой при проведении
командной олимпиады, каждому ученику выдается уникальный идентификатор – целое число от 1 до
1000. Для хранения каждого идентификатора используется одинаковое и минимально возможное
количество бит. Идентификатор команды состоит из последовательно записанных идентификаторов
учеников и 8 дополнительных бит. Для записи каждого идентификатора команды система использует
одинаковое и минимально возможное количество байт. Во всех командах равное количество
участников. Сколько участников в каждой команде, если для хранения идентификаторов 20 команд-
участниц потребовалось 180 байт?
"""
# # TODO: Ответ – 6
# for i in range(1, 100):
#     if ceil((i*10+8)/8)*20 == 180:
#         print(i)
#         break


"""
12. Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может
выполнять две команды, в обеих командах v и w обозначают цепочки символов.
1. заменить (v, w)
2. нашлось (v)
Первая команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Если цепочки v в
строке нет, эта команда не изменяет строку. Вторая команда проверяет, встречается ли цепочка v в
строке исполнителя Редактор.
Дана программа для исполнителя Редактор:
ПОКА нашлось (555) ИЛИ нашлось (888)
 заменить (555, 8)
 заменить (888, 55)
КОНЕЦ ПОКА
Известно, что начальная строка состоит более чем из 100 цифр 8 и не содержит других символов. В
ходе работы алгоритма получилась строка, не содержащая цифр 8. Укажите минимальную возможную
длину входной строки.
"""
# # TODO: Ответ – 101
# for i in range(100, 1000):
#     s = '8' * i
#     while '555' in s or '888' in s:
#         s = s.replace('555', '8', 1)
#         s = s.replace('888', '55', 1)
#     if '8' not in s:
#         print(i)
#         break


"""
13. На рисунке – схема дорог, связывающих города А, Б, В, Г, Д, Е, Ж, З, И, К, Л, М, Н, O, Т. По
каждой дороге можно двигаться только в одном направлении, указанном стрелкой. Сколько
существует различных путей, ведущих из города А в город Т и проходящих через город К?
"""
# # TODO: Ответ – 144
# #  (а=1
# #  б=1
# #  в=4
# #  г=3
# #  д=1
# #  е=3
# #  ж=4+3+3=10
# #  з=10+3+1=14
# #  и=10+4=14
# #  к=14+10=24
# #  л=24(только "к")
# #  о=24+24=48(всё кроме "и")
# #  м=48(только "о")
# #  н=48+48=96
# #  т=48+96=144)


"""
14. Сколько значащих нулей в двоичной записи числа 4**2015 + 8**2016 - 2**2017 - 150?
"""
# # TODO: Ответ – 2023
# print(bin(4 ** 2015 + 8 ** 2016 - 2 ** 2017 - 150)[2:].count('0'))

"""
15. Элементами множеств А, P, Q являются натуральные числа, причём P={1,2,3,4,5,6}, Q={3,5,15}.
Известно, что выражение
(x ∉ A) → ((x ∉ P) ∧ (x ∈ Q)) ∨ (x ∉ Q)
истинно (т.е. принимает значение 1 при любом значении переменной х. Определите наименьшее
возможное количество элементов в множестве A.
"""
# # TODO: Ответ – 2 (A + (!P * Q) + !Q)


"""
16. Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими
соотношениями:
F(n) = 2*n*n + 4*n + 3, при n ≤ 15
F(n) = F(n-1) + n*n + 3, при n > 15, кратных 3
F(n) = F(n-2) + n - 6, при n > 15, не кратных 3
Определите количество натуральных значений n из отрезка [1; 1000], для которых все цифры
значения F(n) нечётные.
"""
# # TODO: Ответ – 27
# def F(n):
#     if n <= 15:
#         return 2 * n * n + 4 * n + 3
#     return F(n - 1) + n * n + 3 if not n % 3 else F(n - 2) + n - 6
#
#
# c = 0
# for n in range(1, 1001):
#     f = list(map(int, str(F(n))))
#     if [i for i in f if i % 2] == f:
#         c += 1
# print(c)


"""
17. (М. Шагитов) В файле 17-316.txt содержится последовательность целых чисел. Элементы
последовательности - четырёхзначные натуральные числа. Назовём два различных четырёхзначных
числа хорошей парой, если их среднее арифметическое (полусумма) и среднее геометрическое
(квадратный корень из произведения) — натуральные числа. Найдите все тройки элементов
последовательности, в которых есть хотя бы одна хорошая пара, а сумма всех чисел тройки меньше
максимальной суммы двух различных элементов последовательности. В ответе запишите количество
найденных троек, затем минимальную из сумм элементов таких троек. В данной задаче под тройкой
подразумевается три идущих подряд элемента последовательности.
"""
# # TODO: Ответ – 3151 3850
# start = scratches_algorithms.PerformanceTracking()
#
#
# def good(lst):
#     return sum(lst) / len(lst) == sum(lst) // len(lst) and \
#         reduce(lambda x, y: x * y, lst) ** 0.5 == round(reduce(lambda x, y: x * y, lst) ** 0.5)
#
#
# with open('data/17-316.txt') as f:
#     data = list(map(int, f.readlines()))
#
# mxs2 = max(sum(p) for p in combinations(data, r=2))
#
# c = 0
# mn = 10 ** 10
# for i in range(len(data) - 2):
#     s = sum(data[i:i + 3])
#     if (good(data[i:i + 2]) or good(data[i + 1:i + 3]) or good([data[i], data[i + 2]])) and s < mxs2:
#         c += 1
#         mn = min(mn, s)
# print(c, mn)
# del start


"""
18. (А.М. Кабанов) Квадрат разлинован на N×N клеток (1 < N < 20). Исполнитель Робот может
перемещаться по клеткам, выполняя за одно перемещение одну из двух команд: влево или вверх. По
команде влево Робот перемещается на любое количество клеток влево, по команде вверх – на
любое количество клеток вверх. При попытке пересечь границы (внутренние, обозначенные
жирными линиями, или границы квадрата) Робот разрушается. В каждой клетке квадрата указана
плата за посещение в размере от 1 до 100. Остановившись в клетке, Робот платит за её посещение; это
также относится к начальной и конечной точке маршрута Робота. Определите минимальную и
максимальную денежную сумму, которую заплатит Робот, пройдя из правой нижней клетки в левую
верхнюю. В ответе укажите два числа – сначала максимальную сумму, затем минимальную.
Исходные данные для Робота записаны в файле 18-90.xls в виде прямоугольной таблицы, каждая
ячейка которой соответствует клетке квадрата.
"""
# # TODO: Ответ – 2130 181


"""
19. (Е. Джобс) Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча
камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может уменьшить
количество камней в три раза (количество камней, полученное при делении, округляется до
меньшего) или убрать из кучи 10 камней. Например, из кучи из 25 камней можно получить кучу из 8
или 15 камней. Игра завершается в тот момент, когда количество камней в куче становится не более
10. Победителем считается игрок, сделавший последний ход. В начальный момент в куче было S
камней (S ≥ 11).
Ответьте на следующие вопросы:
Вопрос 1. Известно, что Ваня выиграл своим первым ходом после неудачного хода Пети. При каком
максимальном значении S такое возможно?
Вопрос 2. Найдите минимальное и максимальное значения S, при которых у Пети есть выигрышная
стратегия, причём Петя может выиграть своим вторым ходом независимо от того, как будет ходить
Ваня. Найденные значения запишите в ответе в порядке возрастания.
Вопрос 3. Сколько существует значений S, при которых Ваня имеет выигрышную стратегию за один
или два хода, при этом не имеет выигрышной стратегии в один ход?
"""
# # TODO: Ответ –
# #  Вопрос 1: 98 ((10*3+2)*3+2)
# #  Вопрос 2: 43 128
# #  Вопрос 3: 20
# def game(x):
#     if x <= 10:
#         return 0
#     tmp = [game(x // 3), game(x - 10)]
#     negative = [i for i in tmp if i <= 0]
#     if len(negative) != 0:
#         return -max(negative) + 1
#     return -max(tmp)
#
#
# two = [i for i in range(11, 300) if game(i) == 2]
# print(min(two), max(two))
# print(len([i for i in range(11, 300) if game(i) == -2]))


"""
20. (А. Кожевникова) В файле 22-5.xls содержится информация о вычислительных процессов
проектов P1 и P2, которые могут выполняться параллельно или последовательно. Будем говорить, что
процесс B зависит от процесса A, если для выполнения процесса B необходимы результаты
выполнения процесса A. В этом случае процессы могут выполняться только последовательно.
Информация о процессах представлена в файле в виде таблицы. В первом столбце таблицы указан
идентификатор процесса (ID), во втором столбце таблицы – время его выполнения в миллисекундах, в
третьем столбце перечислены с разделителем «;» ID процессов, от которых зависит данный процесс.
Если процесс является независимым, то в таблице указано значение 0.
Типовой пример организации данных в файле:
В данном случае независимые процессы 1 и 2
могут выполняться параллельно, при этом процесс 1 завершится через 4 мс, а процесс 2 – через 3 мс с
момента старта. Процесс 3 может начаться только после завершения обоих процессов 1 и 2, то есть,
через 4 мс после старта. Он длится 1 мс и закончится через 4 + 1 = 5 мс после старта. Выполнение
процесса 4 может начаться только после завершения процесса 3, то есть, через 5 мс. Он длится 7 мс,
так что минимальное время завершения всех процессов равно 5 + 7 = 12 мс.
Найдите разницу между минимальным временем выполнения проектов P1 и P2. Проект считается
завершенным, когда завершились все процессы проекта.
"""
# # FIXME: Ответ –
